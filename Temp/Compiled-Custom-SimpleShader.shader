// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Custom/SimpleShader" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo (RGB)", 2D) = "white" { }
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //        d3d11: 26 avg math (16..50)
 // Stats for Fragment shader:
 //        d3d11: 151 avg math (133..170), 4 avg texture (2..6), 7 avg branch (6..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: mov o5.xyzw, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 133 math, 12 temp registers, 2 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 1 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 2 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float       
// TEXCOORD                 6   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: eq r1.w, cb4[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r1.w, cb4[0].y, l(1.000000)
   9:   mul r4.xyz, v3.yyyy, cb4[2].xyzx
  10:   mad r4.xyz, cb4[1].xyzx, v3.xxxx, r4.xyzx
  11:   mad r4.xyz, cb4[3].xyzx, v3.zzzz, r4.xyzx
  12:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  13:   movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
  14:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  15:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  16:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  17:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  18:   max r4.x, r1.w, r2.w
  19:   sample r4.xyzw, r4.xzwx, t3.xyzw, s1
  20: else 
  21:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  24: add r2.w, -cb0[4].x, l(1.000000)
  25: dp3 r3.w, -r1.xyzx, v2.xyzx
  26: add r3.w, r3.w, r3.w
  27: mad r4.xyz, v2.xyzx, -r3.wwww, -r1.xyzx
  28: mul r5.xyz, r1.wwww, cb0[2].xyzx
  29: lt r1.w, l(0.000000), cb3[2].w
  30: if_nz r1.w
  31:   dp3 r1.w, r4.xyzx, r4.xyzx
  32:   rsq r1.w, r1.w
  33:   mul r6.xyz, r1.wwww, r4.xyzx
  34:   add r7.xyz, -v3.xyzx, cb3[0].xyzx
  35:   div r7.xyz, r7.xyzx, r6.xyzx
  36:   add r8.xyz, -v3.xyzx, cb3[1].xyzx
  37:   div r8.xyz, r8.xyzx, r6.xyzx
  38:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  39:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  40:   min r1.w, r7.y, r7.x
  41:   min r1.w, r7.z, r1.w
  42:   add r7.xyz, v3.xyzx, -cb3[2].xyzx
  43:   mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
  44: else 
  45:   mov r6.xyz, r4.xyzx
  46: endif 
  47: mad r1.w, -r2.w, l(0.700000), l(1.700000)
  48: mul r1.w, r1.w, r2.w
  49: mul r1.w, r1.w, l(6.000000)
  50: sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r1.w
  51: add r3.w, r6.w, l(-1.000000)
  52: mad r3.w, cb3[3].w, r3.w, l(1.000000)
  53: mul r3.w, r3.w, cb3[3].x
  54: mul r7.xyz, r6.xyzx, r3.wwww
  55: lt r4.w, cb3[1].w, l(0.999990)
  56: if_nz r4.w
  57:   lt r4.w, l(0.000000), cb3[6].w
  58:   if_nz r4.w
  59:     dp3 r4.w, r4.xyzx, r4.xyzx
  60:     rsq r4.w, r4.w
  61:     mul r8.xyz, r4.wwww, r4.xyzx
  62:     add r9.xyz, -v3.xyzx, cb3[4].xyzx
  63:     div r9.xyz, r9.xyzx, r8.xyzx
  64:     add r10.xyz, -v3.xyzx, cb3[5].xyzx
  65:     div r10.xyz, r10.xyzx, r8.xyzx
  66:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  67:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  68:     min r4.w, r9.y, r9.x
  69:     min r4.w, r9.z, r4.w
  70:     add r9.xyz, v3.xyzx, -cb3[6].xyzx
  71:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
  72:   endif 
  73:   sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r1.w
  74:   add r1.w, r4.w, l(-1.000000)
  75:   mad r1.w, cb3[7].w, r1.w, l(1.000000)
  76:   mul r1.w, r1.w, cb3[7].x
  77:   mul r4.xyz, r4.xyzx, r1.wwww
  78:   mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
  79:   mad r7.xyz, cb3[1].wwww, r6.xyzx, r4.xyzx
  80: endif 
  81: dp3 r1.w, v2.xyzx, v2.xyzx
  82: rsq r1.w, r1.w
  83: mul r4.xyz, r1.wwww, v2.xyzx
  84: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  85: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  86: mad r1.w, -cb0[4].y, l(0.779084), l(0.779084)
  87: mul r3.xyz, r1.wwww, r3.xyzx
  88: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  89: dp3 r0.w, r0.xyzx, r0.xyzx
  90: max r0.w, r0.w, l(0.001000)
  91: rsq r0.w, r0.w
  92: mul r0.xyz, r0.wwww, r0.xyzx
  93: dp3 r0.w, r4.xyzx, r1.xyzx
  94: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  95: dp3_sat r1.y, r4.xyzx, r0.xyzx
  96: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  97: mul r0.y, r0.x, r0.x
  98: dp2 r0.y, r0.yyyy, r2.wwww
  99: add r0.y, r0.y, l(-0.500000)
 100: add r0.z, -r1.x, l(1.000000)
 101: mul r1.z, r0.z, r0.z
 102: mul r1.z, r1.z, r1.z
 103: mul r0.z, r0.z, r1.z
 104: mad r0.z, r0.y, r0.z, l(1.000000)
 105: add r1.z, -|r0.w|, l(1.000000)
 106: mul r3.w, r1.z, r1.z
 107: mul r3.w, r3.w, r3.w
 108: mul r1.z, r1.z, r3.w
 109: mad r0.y, r0.y, r1.z, l(1.000000)
 110: mul r0.y, r0.y, r0.z
 111: mul r0.z, r2.w, r2.w
 112: max r0.z, r0.z, l(0.002000)
 113: add r3.w, -r0.z, l(1.000000)
 114: mad r4.x, |r0.w|, r3.w, r0.z
 115: mad r3.w, r1.x, r3.w, r0.z
 116: mul r0.w, |r0.w|, r3.w
 117: mad r0.w, r1.x, r4.x, r0.w
 118: add r0.w, r0.w, l(0.000010)
 119: div r0.w, l(0.500000), r0.w
 120: mul r3.w, r0.z, r0.z
 121: mad r4.x, r1.y, r3.w, -r1.y
 122: mad r1.y, r4.x, r1.y, l(1.000000)
 123: mul r3.w, r3.w, l(0.318310)
 124: mad r1.y, r1.y, r1.y, l(0.000000)
 125: div r1.y, r3.w, r1.y
 126: mul r0.w, r0.w, r1.y
 127: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 128: max r0.w, r0.w, l(0.000100)
 129: sqrt r0.w, r0.w
 130: mul r0.yw, r1.xxxx, r0.yyyw
 131: mad r0.z, -r0.z, r2.w, l(1.000000)
 132: dp3 r1.x, r2.xyzx, r2.xyzx
 133: ne r1.x, r1.x, l(0.000000)
 134: and r1.x, r1.x, l(0x3f800000)
 135: mul r0.w, r0.w, r1.x
 136: add r1.x, -r1.w, cb0[4].x
 137: add_sat r1.x, r1.x, l(1.000000)
 138: mul r4.xyz, r0.yyyy, r5.xyzx
 139: mul r5.xyz, r5.xyzx, r0.wwww
 140: add r0.x, -r0.x, l(1.000000)
 141: mul r0.y, r0.x, r0.x
 142: mul r0.y, r0.y, r0.y
 143: mul r0.x, r0.x, r0.y
 144: add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 145: mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
 146: mul r0.xyw, r0.xyxw, r5.xyxz
 147: mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
 148: mul r3.xyz, r7.xyzx, r0.zzzz
 149: add r1.xyw, -r2.xyxz, r1.xxxx
 150: mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
 151: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
 152: mov o0.w, l(1.000000)
 153: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTPROBE_SH 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mul r0.w, r0.y, r0.y
  18: mad r0.w, r0.x, r0.x, -r0.w
  19: mul r1.xyzw, r0.yzzx, r0.xyzz
  20: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  21: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  22: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  23: mad o4.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  24: mov o5.xyzw, l(0,0,0,0)
  25: mov o6.xyzw, l(0,0,0,0)
  26: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 13 temp registers, 5 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 1 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 2 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: eq r1.w, cb4[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r2.w, cb4[0].y, l(1.000000)
   9:   mul r4.xyz, v3.yyyy, cb4[2].xyzx
  10:   mad r4.xyz, cb4[1].xyzx, v3.xxxx, r4.xyzx
  11:   mad r4.xyz, cb4[3].xyzx, v3.zzzz, r4.xyzx
  12:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  13:   movc r4.xyz, r2.wwww, r4.xyzx, v3.xyzx
  14:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  15:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  16:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  17:   mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  18:   max r4.x, r2.w, r3.w
  19:   sample r4.xyzw, r4.xzwx, t3.xyzw, s1
  20: else 
  21:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  24: add r3.w, -cb0[4].x, l(1.000000)
  25: dp3 r4.x, -r1.xyzx, v2.xyzx
  26: add r4.x, r4.x, r4.x
  27: mad r4.xyz, v2.xyzx, -r4.xxxx, -r1.xyzx
  28: mul r5.xyz, r2.wwww, cb0[2].xyzx
  29: if_nz r1.w
  30:   eq r1.w, cb4[0].y, l(1.000000)
  31:   mul r6.xyz, v3.yyyy, cb4[2].xyzx
  32:   mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
  33:   mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
  34:   add r6.xyz, r6.xyzx, cb4[4].xyzx
  35:   movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
  36:   add r6.xyz, r6.xyzx, -cb4[6].xyzx
  37:   mul r6.yzw, r6.xxyz, cb4[5].xxyz
  38:   mul r1.w, r6.y, l(0.250000)
  39:   mul r2.w, cb4[0].z, l(0.500000)
  40:   mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
  41:   max r1.w, r1.w, r2.w
  42:   min r6.x, r4.w, r1.w
  43:   sample r7.xyzw, r6.xzwx, t3.xyzw, s1
  44:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r8.xyzw, r8.xyzx, t3.xyzw, s1
  46:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r6.xyzw, r6.xyzx, t3.xyzw, s1
  48:   mov r9.xyz, v2.xyzx
  49:   mov r9.w, l(1.000000)
  50:   dp4 r7.x, r7.xyzw, r9.xyzw
  51:   dp4 r7.y, r8.xyzw, r9.xyzw
  52:   dp4 r7.z, r6.xyzw, r9.xyzw
  53: else 
  54:   mov r6.xyz, v2.xyzx
  55:   mov r6.w, l(1.000000)
  56:   dp4 r7.x, cb2[39].xyzw, r6.xyzw
  57:   dp4 r7.y, cb2[40].xyzw, r6.xyzw
  58:   dp4 r7.z, cb2[41].xyzw, r6.xyzw
  59: endif 
  60: add r6.xyz, r7.xyzx, v4.xyzx
  61: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: log r6.xyz, r6.xyzx
  63: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  64: exp r6.xyz, r6.xyzx
  65: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  66: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: lt r1.w, l(0.000000), cb3[2].w
  68: if_nz r1.w
  69:   dp3 r1.w, r4.xyzx, r4.xyzx
  70:   rsq r1.w, r1.w
  71:   mul r7.xyz, r1.wwww, r4.xyzx
  72:   add r8.xyz, -v3.xyzx, cb3[0].xyzx
  73:   div r8.xyz, r8.xyzx, r7.xyzx
  74:   add r9.xyz, -v3.xyzx, cb3[1].xyzx
  75:   div r9.xyz, r9.xyzx, r7.xyzx
  76:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  77:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  78:   min r1.w, r8.y, r8.x
  79:   min r1.w, r8.z, r1.w
  80:   add r8.xyz, v3.xyzx, -cb3[2].xyzx
  81:   mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
  82: else 
  83:   mov r7.xyz, r4.xyzx
  84: endif 
  85: mad r1.w, -r3.w, l(0.700000), l(1.700000)
  86: mul r1.w, r1.w, r3.w
  87: mul r1.w, r1.w, l(6.000000)
  88: sample_l r7.xyzw, r7.xyzx, t1.xyzw, s0, r1.w
  89: add r2.w, r7.w, l(-1.000000)
  90: mad r2.w, cb3[3].w, r2.w, l(1.000000)
  91: mul r2.w, r2.w, cb3[3].x
  92: mul r8.xyz, r7.xyzx, r2.wwww
  93: lt r4.w, cb3[1].w, l(0.999990)
  94: if_nz r4.w
  95:   lt r4.w, l(0.000000), cb3[6].w
  96:   if_nz r4.w
  97:     dp3 r4.w, r4.xyzx, r4.xyzx
  98:     rsq r4.w, r4.w
  99:     mul r9.xyz, r4.wwww, r4.xyzx
 100:     add r10.xyz, -v3.xyzx, cb3[4].xyzx
 101:     div r10.xyz, r10.xyzx, r9.xyzx
 102:     add r11.xyz, -v3.xyzx, cb3[5].xyzx
 103:     div r11.xyz, r11.xyzx, r9.xyzx
 104:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 105:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 106:     min r4.w, r10.y, r10.x
 107:     min r4.w, r10.z, r4.w
 108:     add r10.xyz, v3.xyzx, -cb3[6].xyzx
 109:     mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
 110:   endif 
 111:   sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r1.w
 112:   add r1.w, r4.w, l(-1.000000)
 113:   mad r1.w, cb3[7].w, r1.w, l(1.000000)
 114:   mul r1.w, r1.w, cb3[7].x
 115:   mul r4.xyz, r4.xyzx, r1.wwww
 116:   mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
 117:   mad r8.xyz, cb3[1].wwww, r7.xyzx, r4.xyzx
 118: endif 
 119: dp3 r1.w, v2.xyzx, v2.xyzx
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, v2.xyzx
 122: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 123: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 124: mad r1.w, -cb0[4].y, l(0.779084), l(0.779084)
 125: mul r3.xyz, r1.wwww, r3.xyzx
 126: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 127: dp3 r0.w, r0.xyzx, r0.xyzx
 128: max r0.w, r0.w, l(0.001000)
 129: rsq r0.w, r0.w
 130: mul r0.xyz, r0.wwww, r0.xyzx
 131: dp3 r0.w, r4.xyzx, r1.xyzx
 132: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 133: dp3_sat r1.y, r4.xyzx, r0.xyzx
 134: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 135: mul r0.y, r0.x, r0.x
 136: dp2 r0.y, r0.yyyy, r3.wwww
 137: add r0.y, r0.y, l(-0.500000)
 138: add r0.z, -r1.x, l(1.000000)
 139: mul r1.z, r0.z, r0.z
 140: mul r1.z, r1.z, r1.z
 141: mul r0.z, r0.z, r1.z
 142: mad r0.z, r0.y, r0.z, l(1.000000)
 143: add r1.z, -|r0.w|, l(1.000000)
 144: mul r2.w, r1.z, r1.z
 145: mul r2.w, r2.w, r2.w
 146: mul r1.z, r1.z, r2.w
 147: mad r0.y, r0.y, r1.z, l(1.000000)
 148: mul r0.y, r0.y, r0.z
 149: mul r0.z, r3.w, r3.w
 150: max r0.z, r0.z, l(0.002000)
 151: add r2.w, -r0.z, l(1.000000)
 152: mad r4.x, |r0.w|, r2.w, r0.z
 153: mad r2.w, r1.x, r2.w, r0.z
 154: mul r0.w, |r0.w|, r2.w
 155: mad r0.w, r1.x, r4.x, r0.w
 156: add r0.w, r0.w, l(0.000010)
 157: div r0.w, l(0.500000), r0.w
 158: mul r2.w, r0.z, r0.z
 159: mad r4.x, r1.y, r2.w, -r1.y
 160: mad r1.y, r4.x, r1.y, l(1.000000)
 161: mul r2.w, r2.w, l(0.318310)
 162: mad r1.y, r1.y, r1.y, l(0.000000)
 163: div r1.y, r2.w, r1.y
 164: mul r0.w, r0.w, r1.y
 165: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 166: max r0.w, r0.w, l(0.000100)
 167: sqrt r0.w, r0.w
 168: mul r0.yw, r1.xxxx, r0.yyyw
 169: mad r0.z, -r0.z, r3.w, l(1.000000)
 170: dp3 r1.x, r2.xyzx, r2.xyzx
 171: ne r1.x, r1.x, l(0.000000)
 172: and r1.x, r1.x, l(0x3f800000)
 173: mul r0.w, r0.w, r1.x
 174: add r1.x, -r1.w, l(1.000000)
 175: add_sat r1.x, r1.x, cb0[4].x
 176: mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 177: mul r5.xyz, r5.xyzx, r0.wwww
 178: add r0.x, -r0.x, l(1.000000)
 179: mul r0.y, r0.x, r0.x
 180: mul r0.y, r0.y, r0.y
 181: mul r0.x, r0.x, r0.y
 182: add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 183: mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
 184: mul r0.xyw, r0.xyxw, r5.xyxz
 185: mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
 186: mul r3.xyz, r8.xyzx, r0.zzzz
 187: add r1.xyw, -r2.xyxz, r1.xxxx
 188: mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
 189: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
 190: mov o0.w, l(1.000000)
 191: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  11: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mul r0.y, r0.y, cb1[5].x
  18: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  19: mov o4.zw, r0.zzzw
  20: add o4.xy, r1.zzzz, r1.xwxx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 12 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xy w
// TEXCOORD                 6   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: mov r4.x, cb4[9].z
   7: mov r4.y, cb4[10].z
   8: mov r4.z, cb4[11].z
   9: dp3 r1.w, r0.xyzx, r4.xyzx
  10: add r4.xyz, v3.xyzx, -cb3[25].xyzx
  11: dp3 r2.w, r4.xyzx, r4.xyzx
  12: sqrt r2.w, r2.w
  13: add r2.w, -r1.w, r2.w
  14: mad r1.w, cb3[25].w, r2.w, r1.w
  15: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  16: eq r2.w, cb6[0].x, l(1.000000)
  17: if_nz r2.w
  18:   eq r2.w, cb6[0].y, l(1.000000)
  19:   mul r4.xyz, v3.yyyy, cb6[2].xyzx
  20:   mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
  21:   mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  23:   movc r4.xyz, r2.wwww, r4.xyzx, v3.xyzx
  24:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  26:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r2.w, r3.w
  29:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  34: div r4.xy, v4.xyxx, v4.wwww
  35: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  36: add r2.w, r2.w, -r4.x
  37: mad r1.w, r1.w, r2.w, r4.x
  38: add r2.w, -cb0[4].x, l(1.000000)
  39: dp3 r3.w, -r1.xyzx, v2.xyzx
  40: add r3.w, r3.w, r3.w
  41: mad r4.xyz, v2.xyzx, -r3.wwww, -r1.xyzx
  42: mul r5.xyz, r1.wwww, cb0[2].xyzx
  43: lt r1.w, l(0.000000), cb5[2].w
  44: if_nz r1.w
  45:   dp3 r1.w, r4.xyzx, r4.xyzx
  46:   rsq r1.w, r1.w
  47:   mul r6.xyz, r1.wwww, r4.xyzx
  48:   add r7.xyz, -v3.xyzx, cb5[0].xyzx
  49:   div r7.xyz, r7.xyzx, r6.xyzx
  50:   add r8.xyz, -v3.xyzx, cb5[1].xyzx
  51:   div r8.xyz, r8.xyzx, r6.xyzx
  52:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  53:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  54:   min r1.w, r7.y, r7.x
  55:   min r1.w, r7.z, r1.w
  56:   add r7.xyz, v3.xyzx, -cb5[2].xyzx
  57:   mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
  58: else 
  59:   mov r6.xyz, r4.xyzx
  60: endif 
  61: mad r1.w, -r2.w, l(0.700000), l(1.700000)
  62: mul r1.w, r1.w, r2.w
  63: mul r1.w, r1.w, l(6.000000)
  64: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r1.w
  65: add r3.w, r6.w, l(-1.000000)
  66: mad r3.w, cb5[3].w, r3.w, l(1.000000)
  67: mul r3.w, r3.w, cb5[3].x
  68: mul r7.xyz, r6.xyzx, r3.wwww
  69: lt r4.w, cb5[1].w, l(0.999990)
  70: if_nz r4.w
  71:   lt r4.w, l(0.000000), cb5[6].w
  72:   if_nz r4.w
  73:     dp3 r4.w, r4.xyzx, r4.xyzx
  74:     rsq r4.w, r4.w
  75:     mul r8.xyz, r4.wwww, r4.xyzx
  76:     add r9.xyz, -v3.xyzx, cb5[4].xyzx
  77:     div r9.xyz, r9.xyzx, r8.xyzx
  78:     add r10.xyz, -v3.xyzx, cb5[5].xyzx
  79:     div r10.xyz, r10.xyzx, r8.xyzx
  80:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  81:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  82:     min r4.w, r9.y, r9.x
  83:     min r4.w, r9.z, r4.w
  84:     add r9.xyz, v3.xyzx, -cb5[6].xyzx
  85:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
  86:   endif 
  87:   sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
  88:   add r1.w, r4.w, l(-1.000000)
  89:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
  90:   mul r1.w, r1.w, cb5[7].x
  91:   mul r4.xyz, r4.xyzx, r1.wwww
  92:   mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
  93:   mad r7.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
  94: endif 
  95: dp3 r1.w, v2.xyzx, v2.xyzx
  96: rsq r1.w, r1.w
  97: mul r4.xyz, r1.wwww, v2.xyzx
  98: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  99: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 100: mad r1.w, -cb0[4].y, l(0.779084), l(0.779084)
 101: mul r3.xyz, r1.wwww, r3.xyzx
 102: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 103: dp3 r0.w, r0.xyzx, r0.xyzx
 104: max r0.w, r0.w, l(0.001000)
 105: rsq r0.w, r0.w
 106: mul r0.xyz, r0.wwww, r0.xyzx
 107: dp3 r0.w, r4.xyzx, r1.xyzx
 108: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 109: dp3_sat r1.y, r4.xyzx, r0.xyzx
 110: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 111: mul r0.y, r0.x, r0.x
 112: dp2 r0.y, r0.yyyy, r2.wwww
 113: add r0.y, r0.y, l(-0.500000)
 114: add r0.z, -r1.x, l(1.000000)
 115: mul r1.z, r0.z, r0.z
 116: mul r1.z, r1.z, r1.z
 117: mul r0.z, r0.z, r1.z
 118: mad r0.z, r0.y, r0.z, l(1.000000)
 119: add r1.z, -|r0.w|, l(1.000000)
 120: mul r3.w, r1.z, r1.z
 121: mul r3.w, r3.w, r3.w
 122: mul r1.z, r1.z, r3.w
 123: mad r0.y, r0.y, r1.z, l(1.000000)
 124: mul r0.y, r0.y, r0.z
 125: mul r0.z, r2.w, r2.w
 126: max r0.z, r0.z, l(0.002000)
 127: add r3.w, -r0.z, l(1.000000)
 128: mad r4.x, |r0.w|, r3.w, r0.z
 129: mad r3.w, r1.x, r3.w, r0.z
 130: mul r0.w, |r0.w|, r3.w
 131: mad r0.w, r1.x, r4.x, r0.w
 132: add r0.w, r0.w, l(0.000010)
 133: div r0.w, l(0.500000), r0.w
 134: mul r3.w, r0.z, r0.z
 135: mad r4.x, r1.y, r3.w, -r1.y
 136: mad r1.y, r4.x, r1.y, l(1.000000)
 137: mul r3.w, r3.w, l(0.318310)
 138: mad r1.y, r1.y, r1.y, l(0.000000)
 139: div r1.y, r3.w, r1.y
 140: mul r0.w, r0.w, r1.y
 141: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 142: max r0.w, r0.w, l(0.000100)
 143: sqrt r0.w, r0.w
 144: mul r0.yw, r1.xxxx, r0.yyyw
 145: mad r0.z, -r0.z, r2.w, l(1.000000)
 146: dp3 r1.x, r2.xyzx, r2.xyzx
 147: ne r1.x, r1.x, l(0.000000)
 148: and r1.x, r1.x, l(0x3f800000)
 149: mul r0.w, r0.w, r1.x
 150: add r1.x, -r1.w, cb0[4].x
 151: add_sat r1.x, r1.x, l(1.000000)
 152: mul r4.xyz, r0.yyyy, r5.xyzx
 153: mul r5.xyz, r5.xyzx, r0.wwww
 154: add r0.x, -r0.x, l(1.000000)
 155: mul r0.y, r0.x, r0.x
 156: mul r0.y, r0.y, r0.y
 157: mul r0.x, r0.x, r0.y
 158: add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
 160: mul r0.xyw, r0.xyxw, r5.xyxz
 161: mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
 162: mul r3.xyz, r7.xyzx, r0.zzzz
 163: add r1.xyw, -r2.xyxz, r1.xxxx
 164: mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
 165: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
 166: mov o0.w, l(1.000000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTPROBE_SH 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  11: dp3 r1.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul r1.xyz, r1.wwww, r1.xyzx
  17: mov o2.xyz, r1.xyzx
  18: mul r1.w, r1.y, r1.y
  19: mad r1.w, r1.x, r1.x, -r1.w
  20: mul r2.xyzw, r1.yzzx, r1.xyzz
  21: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  22: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  23: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  24: mad o4.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  25: mul r0.y, r0.y, cb1[5].x
  26: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  27: mov o5.zw, r0.zzzw
  28: add o5.xy, r1.zzzz, r1.xwxx
  29: mov o6.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 170 math, 13 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: mov r4.x, cb4[9].z
   7: mov r4.y, cb4[10].z
   8: mov r4.z, cb4[11].z
   9: dp3 r1.w, r0.xyzx, r4.xyzx
  10: add r4.xyz, v3.xyzx, -cb3[25].xyzx
  11: dp3 r2.w, r4.xyzx, r4.xyzx
  12: sqrt r2.w, r2.w
  13: add r2.w, -r1.w, r2.w
  14: mad r1.w, cb3[25].w, r2.w, r1.w
  15: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  16: eq r2.w, cb6[0].x, l(1.000000)
  17: if_nz r2.w
  18:   eq r3.w, cb6[0].y, l(1.000000)
  19:   mul r4.xyz, v3.yyyy, cb6[2].xyzx
  20:   mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
  21:   mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  23:   movc r4.xyz, r3.wwww, r4.xyzx, v3.xyzx
  24:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  26:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r3.w, r4.y
  29:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  34: div r4.xy, v5.xyxx, v5.wwww
  35: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  36: add r3.w, r3.w, -r4.x
  37: mad r1.w, r1.w, r3.w, r4.x
  38: add r3.w, -cb0[4].x, l(1.000000)
  39: dp3 r4.x, -r1.xyzx, v2.xyzx
  40: add r4.x, r4.x, r4.x
  41: mad r4.xyz, v2.xyzx, -r4.xxxx, -r1.xyzx
  42: mul r5.xyz, r1.wwww, cb0[2].xyzx
  43: if_nz r2.w
  44:   eq r1.w, cb6[0].y, l(1.000000)
  45:   mul r6.xyz, v3.yyyy, cb6[2].xyzx
  46:   mad r6.xyz, cb6[1].xyzx, v3.xxxx, r6.xyzx
  47:   mad r6.xyz, cb6[3].xyzx, v3.zzzz, r6.xyzx
  48:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  49:   movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
  50:   add r6.xyz, r6.xyzx, -cb6[6].xyzx
  51:   mul r6.yzw, r6.xxyz, cb6[5].xxyz
  52:   mul r1.w, r6.y, l(0.250000)
  53:   mul r2.w, cb6[0].z, l(0.500000)
  54:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  55:   max r1.w, r1.w, r2.w
  56:   min r6.x, r4.w, r1.w
  57:   sample r7.xyzw, r6.xzwx, t4.xyzw, s1
  58:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  59:   sample r8.xyzw, r8.xyzx, t4.xyzw, s1
  60:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  61:   sample r6.xyzw, r6.xyzx, t4.xyzw, s1
  62:   mov r9.xyz, v2.xyzx
  63:   mov r9.w, l(1.000000)
  64:   dp4 r7.x, r7.xyzw, r9.xyzw
  65:   dp4 r7.y, r8.xyzw, r9.xyzw
  66:   dp4 r7.z, r6.xyzw, r9.xyzw
  67: else 
  68:   mov r6.xyz, v2.xyzx
  69:   mov r6.w, l(1.000000)
  70:   dp4 r7.x, cb2[39].xyzw, r6.xyzw
  71:   dp4 r7.y, cb2[40].xyzw, r6.xyzw
  72:   dp4 r7.z, cb2[41].xyzw, r6.xyzw
  73: endif 
  74: add r6.xyz, r7.xyzx, v4.xyzx
  75: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: log r6.xyz, r6.xyzx
  77: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  78: exp r6.xyz, r6.xyzx
  79: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  80: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  81: lt r1.w, l(0.000000), cb5[2].w
  82: if_nz r1.w
  83:   dp3 r1.w, r4.xyzx, r4.xyzx
  84:   rsq r1.w, r1.w
  85:   mul r7.xyz, r1.wwww, r4.xyzx
  86:   add r8.xyz, -v3.xyzx, cb5[0].xyzx
  87:   div r8.xyz, r8.xyzx, r7.xyzx
  88:   add r9.xyz, -v3.xyzx, cb5[1].xyzx
  89:   div r9.xyz, r9.xyzx, r7.xyzx
  90:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  91:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  92:   min r1.w, r8.y, r8.x
  93:   min r1.w, r8.z, r1.w
  94:   add r8.xyz, v3.xyzx, -cb5[2].xyzx
  95:   mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
  96: else 
  97:   mov r7.xyz, r4.xyzx
  98: endif 
  99: mad r1.w, -r3.w, l(0.700000), l(1.700000)
 100: mul r1.w, r1.w, r3.w
 101: mul r1.w, r1.w, l(6.000000)
 102: sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r1.w
 103: add r2.w, r7.w, l(-1.000000)
 104: mad r2.w, cb5[3].w, r2.w, l(1.000000)
 105: mul r2.w, r2.w, cb5[3].x
 106: mul r8.xyz, r7.xyzx, r2.wwww
 107: lt r4.w, cb5[1].w, l(0.999990)
 108: if_nz r4.w
 109:   lt r4.w, l(0.000000), cb5[6].w
 110:   if_nz r4.w
 111:     dp3 r4.w, r4.xyzx, r4.xyzx
 112:     rsq r4.w, r4.w
 113:     mul r9.xyz, r4.wwww, r4.xyzx
 114:     add r10.xyz, -v3.xyzx, cb5[4].xyzx
 115:     div r10.xyz, r10.xyzx, r9.xyzx
 116:     add r11.xyz, -v3.xyzx, cb5[5].xyzx
 117:     div r11.xyz, r11.xyzx, r9.xyzx
 118:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 119:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 120:     min r4.w, r10.y, r10.x
 121:     min r4.w, r10.z, r4.w
 122:     add r10.xyz, v3.xyzx, -cb5[6].xyzx
 123:     mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
 124:   endif 
 125:   sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
 126:   add r1.w, r4.w, l(-1.000000)
 127:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 128:   mul r1.w, r1.w, cb5[7].x
 129:   mul r4.xyz, r4.xyzx, r1.wwww
 130:   mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
 131:   mad r8.xyz, cb5[1].wwww, r7.xyzx, r4.xyzx
 132: endif 
 133: dp3 r1.w, v2.xyzx, v2.xyzx
 134: rsq r1.w, r1.w
 135: mul r4.xyz, r1.wwww, v2.xyzx
 136: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 137: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 138: mad r1.w, -cb0[4].y, l(0.779084), l(0.779084)
 139: mul r3.xyz, r1.wwww, r3.xyzx
 140: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 141: dp3 r0.w, r0.xyzx, r0.xyzx
 142: max r0.w, r0.w, l(0.001000)
 143: rsq r0.w, r0.w
 144: mul r0.xyz, r0.wwww, r0.xyzx
 145: dp3 r0.w, r4.xyzx, r1.xyzx
 146: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 147: dp3_sat r1.y, r4.xyzx, r0.xyzx
 148: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 149: mul r0.y, r0.x, r0.x
 150: dp2 r0.y, r0.yyyy, r3.wwww
 151: add r0.y, r0.y, l(-0.500000)
 152: add r0.z, -r1.x, l(1.000000)
 153: mul r1.z, r0.z, r0.z
 154: mul r1.z, r1.z, r1.z
 155: mul r0.z, r0.z, r1.z
 156: mad r0.z, r0.y, r0.z, l(1.000000)
 157: add r1.z, -|r0.w|, l(1.000000)
 158: mul r2.w, r1.z, r1.z
 159: mul r2.w, r2.w, r2.w
 160: mul r1.z, r1.z, r2.w
 161: mad r0.y, r0.y, r1.z, l(1.000000)
 162: mul r0.y, r0.y, r0.z
 163: mul r0.z, r3.w, r3.w
 164: max r0.z, r0.z, l(0.002000)
 165: add r2.w, -r0.z, l(1.000000)
 166: mad r4.x, |r0.w|, r2.w, r0.z
 167: mad r2.w, r1.x, r2.w, r0.z
 168: mul r0.w, |r0.w|, r2.w
 169: mad r0.w, r1.x, r4.x, r0.w
 170: add r0.w, r0.w, l(0.000010)
 171: div r0.w, l(0.500000), r0.w
 172: mul r2.w, r0.z, r0.z
 173: mad r4.x, r1.y, r2.w, -r1.y
 174: mad r1.y, r4.x, r1.y, l(1.000000)
 175: mul r2.w, r2.w, l(0.318310)
 176: mad r1.y, r1.y, r1.y, l(0.000000)
 177: div r1.y, r2.w, r1.y
 178: mul r0.w, r0.w, r1.y
 179: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 180: max r0.w, r0.w, l(0.000100)
 181: sqrt r0.w, r0.w
 182: mul r0.yw, r1.xxxx, r0.yyyw
 183: mad r0.z, -r0.z, r3.w, l(1.000000)
 184: dp3 r1.x, r2.xyzx, r2.xyzx
 185: ne r1.x, r1.x, l(0.000000)
 186: and r1.x, r1.x, l(0x3f800000)
 187: mul r0.w, r0.w, r1.x
 188: add r1.x, -r1.w, l(1.000000)
 189: add_sat r1.x, r1.x, cb0[4].x
 190: mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 191: mul r5.xyz, r5.xyzx, r0.wwww
 192: add r0.x, -r0.x, l(1.000000)
 193: mul r0.y, r0.x, r0.x
 194: mul r0.y, r0.y, r0.y
 195: mul r0.x, r0.x, r0.y
 196: add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 197: mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
 198: mul r0.xyw, r0.xyxw, r5.xyxz
 199: mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
 200: mul r3.xyz, r8.xyzx, r0.zzzz
 201: add r1.xyw, -r2.xyxz, r1.xxxx
 202: mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
 203: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
 204: mov o0.w, l(1.000000)
 205: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: mov o5.xyzw, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 46 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mov o3.xyz, r0.xyzx
  18: add r2.xyzw, -r0.xxxx, cb1[3].xyzw
  19: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  20: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  21: mul r4.xyzw, r1.yyyy, r3.xyzw
  22: mul r3.xyzw, r3.xyzw, r3.xyzw
  23: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  24: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  25: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  26: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  27: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  28: rsq r3.xyzw, r0.xyzw
  29: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  30: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  31: mul r2.xyzw, r2.xyzw, r3.xyzw
  32: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mul r0.xyzw, r0.xyzw, r2.xyzw
  34: mul r2.xyz, r0.yyyy, cb1[8].xyzx
  35: mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
  36: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
  37: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  38: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  39: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  40: mul r0.w, r1.y, r1.y
  41: mad r0.w, r1.x, r1.x, -r0.w
  42: mul r1.xyzw, r1.yzzx, r1.xyzz
  43: dp4 r3.x, cb1[42].xyzw, r1.xyzw
  44: dp4 r3.y, cb1[43].xyzw, r1.xyzw
  45: dp4 r3.z, cb1[44].xyzw, r1.xyzw
  46: mad r1.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  47: mad o4.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  48: mov o5.xyzw, l(0,0,0,0)
  49: mov o6.xyzw, l(0,0,0,0)
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  11: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mul r0.y, r0.y, cb1[5].x
  18: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  19: mov o4.zw, r0.zzzw
  20: add o4.xy, r1.zzzz, r1.xwxx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN LIGHTPROBE_SH VERTEXLIGHT_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  11: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o2.xyz, r2.xyzx
  18: mov o3.xyz, r0.xyzx
  19: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  20: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  21: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  22: mul r5.xyzw, r2.yyyy, r4.xyzw
  23: mul r4.xyzw, r4.xyzw, r4.xyzw
  24: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  25: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  26: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  27: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  28: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  29: rsq r4.xyzw, r0.xyzw
  30: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  31: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  32: mul r3.xyzw, r3.xyzw, r4.xyzw
  33: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: mul r0.xyzw, r0.xyzw, r3.xyzw
  35: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  36: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  37: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  38: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  39: mad r3.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  40: mad r3.xyz, r0.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  41: mul r0.w, r2.y, r2.y
  42: mad r0.w, r2.x, r2.x, -r0.w
  43: mul r2.xyzw, r2.yzzx, r2.xyzz
  44: dp4 r4.x, cb2[42].xyzw, r2.xyzw
  45: dp4 r4.y, cb2[43].xyzw, r2.xyzw
  46: dp4 r4.z, cb2[44].xyzw, r2.xyzw
  47: mad r2.xyz, cb2[45].xyzx, r0.wwww, r4.xyzx
  48: mad o4.xyz, r0.xyzx, r3.xyzx, r2.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o5.zw, r1.zzzw
  53: add o5.xy, r0.zzzz, r0.xwxx
  54: mov o6.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 20 avg math (16..25)
 // Stats for Fragment shader:
 //        d3d11: 105 avg math (83..144), 3 avg texture (2..4), 2 avg branch (2..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  ZWrite Off
  Blend One One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v1.xyxx, t0.xyzw, s2
   9: mul r4.xyz, r3.xyzx, cb0[9].xyzx
  10: mul r5.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
  12: mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
  13: add r5.xyz, r5.xyzx, cb0[7].xyzx
  14: eq r1.w, cb3[0].x, l(1.000000)
  15: if_nz r1.w
  16:   eq r1.w, cb3[0].y, l(1.000000)
  17:   mul r6.xyz, v3.yyyy, cb3[2].xyzx
  18:   mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
  19:   mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
  20:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  21:   movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
  22:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  23:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  24:   mad r1.w, r6.y, l(0.250000), l(0.750000)
  25:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  26:   max r6.x, r1.w, r2.w
  27:   sample r6.xyzw, r6.xzwx, t2.xyzw, s0
  28: else 
  29:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
  32: dp3 r2.w, r5.xyzx, r5.xyzx
  33: sample r5.xyzw, r2.wwww, t1.xyzw, s1
  34: mul r1.w, r1.w, r5.x
  35: mul r5.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, v2.xyzx, v2.xyzx
  37: rsq r1.w, r1.w
  38: mul r6.xyz, r1.wwww, v2.xyzx
  39: mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  40: mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  42: mul r4.xyz, r1.wwww, r4.xyzx
  43: add r1.w, -cb0[8].x, l(1.000000)
  44: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  45: dp3 r0.w, r0.xyzx, r0.xyzx
  46: max r0.w, r0.w, l(0.001000)
  47: rsq r0.w, r0.w
  48: mul r0.xyz, r0.wwww, r0.xyzx
  49: dp3 r0.w, r6.xyzx, r2.xyzx
  50: dp3_sat r2.x, r6.xyzx, r1.xyzx
  51: dp3_sat r2.y, r6.xyzx, r0.xyzx
  52: dp3_sat r0.x, r1.xyzx, r0.xyzx
  53: mul r0.y, r0.x, r0.x
  54: dp2 r0.y, r0.yyyy, r1.wwww
  55: add r0.y, r0.y, l(-0.500000)
  56: add r0.z, -r2.x, l(1.000000)
  57: mul r1.x, r0.z, r0.z
  58: mul r1.x, r1.x, r1.x
  59: mul r0.z, r0.z, r1.x
  60: mad r0.z, r0.y, r0.z, l(1.000000)
  61: add r1.x, -|r0.w|, l(1.000000)
  62: mul r1.y, r1.x, r1.x
  63: mul r1.y, r1.y, r1.y
  64: mul r1.x, r1.x, r1.y
  65: mad r0.y, r0.y, r1.x, l(1.000000)
  66: mul r0.y, r0.y, r0.z
  67: mul r0.z, r1.w, r1.w
  68: max r0.z, r0.z, l(0.002000)
  69: add r1.x, -r0.z, l(1.000000)
  70: mad r1.y, |r0.w|, r1.x, r0.z
  71: mad r1.x, r2.x, r1.x, r0.z
  72: mul r0.w, |r0.w|, r1.x
  73: mad r0.w, r2.x, r1.y, r0.w
  74: add r0.w, r0.w, l(0.000010)
  75: div r0.w, l(0.500000), r0.w
  76: mul r0.z, r0.z, r0.z
  77: mad r1.x, r2.y, r0.z, -r2.y
  78: mad r1.x, r1.x, r2.y, l(1.000000)
  79: mul r0.z, r0.z, l(0.318310)
  80: mad r1.x, r1.x, r1.x, l(0.000000)
  81: div r0.z, r0.z, r1.x
  82: mul r0.z, r0.z, r0.w
  83: mul r0.z, r0.z, l(3.141593)
  84: max r0.z, r0.z, l(0.000100)
  85: sqrt r0.z, r0.z
  86: mul r0.yz, r2.xxxx, r0.yyzy
  87: dp3 r0.w, r3.xyzx, r3.xyzx
  88: ne r0.w, r0.w, l(0.000000)
  89: and r0.w, r0.w, l(0x3f800000)
  90: mul r0.z, r0.w, r0.z
  91: mul r1.xyz, r0.yyyy, r5.xyzx
  92: mul r0.yzw, r5.xxyz, r0.zzzz
  93: add r0.x, -r0.x, l(1.000000)
  94: mul r1.w, r0.x, r0.x
  95: mul r1.w, r1.w, r1.w
  96: mul r0.x, r0.x, r1.w
  97: add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  98: mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
  99: mul r0.xyz, r0.yzwy, r2.xyzx
 100: mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 101: mov o0.w, l(1.000000)
 102: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s1
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: eq r1.w, cb3[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r1.w, cb3[0].y, l(1.000000)
   9:   mul r4.xyz, v3.yyyy, cb3[2].xyzx
  10:   mad r4.xyz, cb3[1].xyzx, v3.xxxx, r4.xyzx
  11:   mad r4.xyz, cb3[3].xyzx, v3.zzzz, r4.xyzx
  12:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  13:   movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
  14:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  15:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  16:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  17:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  18:   max r4.x, r1.w, r2.w
  19:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  24: mul r4.xyz, r1.wwww, cb0[2].xyzx
  25: dp3 r1.w, v2.xyzx, v2.xyzx
  26: rsq r1.w, r1.w
  27: mul r5.xyz, r1.wwww, v2.xyzx
  28: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  29: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  30: mad r1.w, -cb0[4].y, l(0.779084), l(0.779084)
  31: mul r3.xyz, r1.wwww, r3.xyzx
  32: add r1.w, -cb0[4].x, l(1.000000)
  33: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: max r0.w, r0.w, l(0.001000)
  36: rsq r0.w, r0.w
  37: mul r0.xyz, r0.wwww, r0.xyzx
  38: dp3 r0.w, r5.xyzx, r1.xyzx
  39: dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
  40: dp3_sat r1.y, r5.xyzx, r0.xyzx
  41: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  42: mul r0.y, r0.x, r0.x
  43: dp2 r0.y, r0.yyyy, r1.wwww
  44: add r0.y, r0.y, l(-0.500000)
  45: add r0.z, -r1.x, l(1.000000)
  46: mul r1.z, r0.z, r0.z
  47: mul r1.z, r1.z, r1.z
  48: mul r0.z, r0.z, r1.z
  49: mad r0.z, r0.y, r0.z, l(1.000000)
  50: add r1.z, -|r0.w|, l(1.000000)
  51: mul r2.w, r1.z, r1.z
  52: mul r2.w, r2.w, r2.w
  53: mul r1.z, r1.z, r2.w
  54: mad r0.y, r0.y, r1.z, l(1.000000)
  55: mul r0.y, r0.y, r0.z
  56: mul r0.z, r1.w, r1.w
  57: max r0.z, r0.z, l(0.002000)
  58: add r1.z, -r0.z, l(1.000000)
  59: mad r1.w, |r0.w|, r1.z, r0.z
  60: mad r1.z, r1.x, r1.z, r0.z
  61: mul r0.w, |r0.w|, r1.z
  62: mad r0.w, r1.x, r1.w, r0.w
  63: add r0.w, r0.w, l(0.000010)
  64: div r0.w, l(0.500000), r0.w
  65: mul r0.z, r0.z, r0.z
  66: mad r1.z, r1.y, r0.z, -r1.y
  67: mad r1.y, r1.z, r1.y, l(1.000000)
  68: mul r0.z, r0.z, l(0.318310)
  69: mad r1.y, r1.y, r1.y, l(0.000000)
  70: div r0.z, r0.z, r1.y
  71: mul r0.z, r0.z, r0.w
  72: mul r0.z, r0.z, l(3.141593)
  73: max r0.z, r0.z, l(0.000100)
  74: sqrt r0.z, r0.z
  75: mul r0.yz, r1.xxxx, r0.yyzy
  76: dp3 r0.w, r2.xyzx, r2.xyzx
  77: ne r0.w, r0.w, l(0.000000)
  78: and r0.w, r0.w, l(0x3f800000)
  79: mul r0.z, r0.w, r0.z
  80: mul r1.xyz, r0.yyyy, r4.xyzx
  81: mul r0.yzw, r4.xxyz, r0.zzzz
  82: add r0.x, -r0.x, l(1.000000)
  83: mul r1.w, r0.x, r0.x
  84: mul r1.w, r1.w, r1.w
  85: mul r0.x, r0.x, r1.w
  86: add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  87: mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
  88: mul r0.xyz, r0.yzwy, r2.xyzx
  89: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
  90: mov o0.w, l(1.000000)
  91: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  18: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  19: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  20: mad o4.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v1.xyxx, t0.xyzw, s3
   9: mul r4.xyz, r3.xyzx, cb0[9].xyzx
  10: mul r5.xyzw, v3.yyyy, cb0[5].xyzw
  11: mad r5.xyzw, cb0[4].xyzw, v3.xxxx, r5.xyzw
  12: mad r5.xyzw, cb0[6].xyzw, v3.zzzz, r5.xyzw
  13: add r5.xyzw, r5.xyzw, cb0[7].xyzw
  14: eq r1.w, cb3[0].x, l(1.000000)
  15: if_nz r1.w
  16:   eq r1.w, cb3[0].y, l(1.000000)
  17:   mul r6.xyz, v3.yyyy, cb3[2].xyzx
  18:   mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
  19:   mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
  20:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  21:   movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
  22:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  23:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  24:   mad r1.w, r6.y, l(0.250000), l(0.750000)
  25:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  26:   max r6.x, r1.w, r2.w
  27:   sample r6.xyzw, r6.xzwx, t3.xyzw, s0
  28: else 
  29:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
  32: lt r2.w, l(0.000000), r5.z
  33: and r2.w, r2.w, l(0x3f800000)
  34: div r6.xy, r5.xyxx, r5.wwww
  35: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  36: sample r6.xyzw, r6.xyxx, t1.xyzw, s1
  37: mul r2.w, r2.w, r6.w
  38: dp3 r3.w, r5.xyzx, r5.xyzx
  39: sample r5.xyzw, r3.wwww, t2.xyzw, s2
  40: mul r2.w, r2.w, r5.x
  41: mul r1.w, r1.w, r2.w
  42: mul r5.xyz, r1.wwww, cb0[2].xyzx
  43: dp3 r1.w, v2.xyzx, v2.xyzx
  44: rsq r1.w, r1.w
  45: mul r6.xyz, r1.wwww, v2.xyzx
  46: mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  47: mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  48: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r1.w, -cb0[8].x, l(1.000000)
  51: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  52: dp3 r0.w, r0.xyzx, r0.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r0.xyz, r0.wwww, r0.xyzx
  56: dp3 r0.w, r6.xyzx, r2.xyzx
  57: dp3_sat r2.x, r6.xyzx, r1.xyzx
  58: dp3_sat r2.y, r6.xyzx, r0.xyzx
  59: dp3_sat r0.x, r1.xyzx, r0.xyzx
  60: mul r0.y, r0.x, r0.x
  61: dp2 r0.y, r0.yyyy, r1.wwww
  62: add r0.y, r0.y, l(-0.500000)
  63: add r0.z, -r2.x, l(1.000000)
  64: mul r1.x, r0.z, r0.z
  65: mul r1.x, r1.x, r1.x
  66: mul r0.z, r0.z, r1.x
  67: mad r0.z, r0.y, r0.z, l(1.000000)
  68: add r1.x, -|r0.w|, l(1.000000)
  69: mul r1.y, r1.x, r1.x
  70: mul r1.y, r1.y, r1.y
  71: mul r1.x, r1.x, r1.y
  72: mad r0.y, r0.y, r1.x, l(1.000000)
  73: mul r0.y, r0.y, r0.z
  74: mul r0.z, r1.w, r1.w
  75: max r0.z, r0.z, l(0.002000)
  76: add r1.x, -r0.z, l(1.000000)
  77: mad r1.y, |r0.w|, r1.x, r0.z
  78: mad r1.x, r2.x, r1.x, r0.z
  79: mul r0.w, |r0.w|, r1.x
  80: mad r0.w, r2.x, r1.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r0.z, r0.z, r0.z
  84: mad r1.x, r2.y, r0.z, -r2.y
  85: mad r1.x, r1.x, r2.y, l(1.000000)
  86: mul r0.z, r0.z, l(0.318310)
  87: mad r1.x, r1.x, r1.x, l(0.000000)
  88: div r0.z, r0.z, r1.x
  89: mul r0.z, r0.z, r0.w
  90: mul r0.z, r0.z, l(3.141593)
  91: max r0.z, r0.z, l(0.000100)
  92: sqrt r0.z, r0.z
  93: mul r0.yz, r2.xxxx, r0.yyzy
  94: dp3 r0.w, r3.xyzx, r3.xyzx
  95: ne r0.w, r0.w, l(0.000000)
  96: and r0.w, r0.w, l(0x3f800000)
  97: mul r0.z, r0.w, r0.z
  98: mul r1.xyz, r0.yyyy, r5.xyzx
  99: mul r0.yzw, r5.xxyz, r0.zzzz
 100: add r0.x, -r0.x, l(1.000000)
 101: mul r1.w, r0.x, r0.x
 102: mul r1.w, r1.w, r1.w
 103: mul r0.x, r0.x, r1.w
 104: add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
 106: mul r0.xyz, r0.yzwy, r2.xyzx
 107: mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v1.xyxx, t0.xyzw, s3
   9: mul r4.xyz, r3.xyzx, cb0[9].xyzx
  10: mul r5.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
  12: mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
  13: add r5.xyz, r5.xyzx, cb0[7].xyzx
  14: eq r1.w, cb3[0].x, l(1.000000)
  15: if_nz r1.w
  16:   eq r1.w, cb3[0].y, l(1.000000)
  17:   mul r6.xyz, v3.yyyy, cb3[2].xyzx
  18:   mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
  19:   mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
  20:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  21:   movc r6.xyz, r1.wwww, r6.xyzx, v3.xyzx
  22:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  23:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  24:   mad r1.w, r6.y, l(0.250000), l(0.750000)
  25:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  26:   max r6.x, r1.w, r2.w
  27:   sample r6.xyzw, r6.xzwx, t3.xyzw, s0
  28: else 
  29:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
  32: dp3 r2.w, r5.xyzx, r5.xyzx
  33: sample r6.xyzw, r2.wwww, t1.xyzw, s2
  34: sample r5.xyzw, r5.xyzx, t2.xyzw, s1
  35: mul r2.w, r5.w, r6.x
  36: mul r1.w, r1.w, r2.w
  37: mul r5.xyz, r1.wwww, cb0[2].xyzx
  38: dp3 r1.w, v2.xyzx, v2.xyzx
  39: rsq r1.w, r1.w
  40: mul r6.xyz, r1.wwww, v2.xyzx
  41: mad r3.xyz, r3.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  44: mul r4.xyz, r1.wwww, r4.xyzx
  45: add r1.w, -cb0[8].x, l(1.000000)
  46: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  47: dp3 r0.w, r0.xyzx, r0.xyzx
  48: max r0.w, r0.w, l(0.001000)
  49: rsq r0.w, r0.w
  50: mul r0.xyz, r0.wwww, r0.xyzx
  51: dp3 r0.w, r6.xyzx, r2.xyzx
  52: dp3_sat r2.x, r6.xyzx, r1.xyzx
  53: dp3_sat r2.y, r6.xyzx, r0.xyzx
  54: dp3_sat r0.x, r1.xyzx, r0.xyzx
  55: mul r0.y, r0.x, r0.x
  56: dp2 r0.y, r0.yyyy, r1.wwww
  57: add r0.y, r0.y, l(-0.500000)
  58: add r0.z, -r2.x, l(1.000000)
  59: mul r1.x, r0.z, r0.z
  60: mul r1.x, r1.x, r1.x
  61: mul r0.z, r0.z, r1.x
  62: mad r0.z, r0.y, r0.z, l(1.000000)
  63: add r1.x, -|r0.w|, l(1.000000)
  64: mul r1.y, r1.x, r1.x
  65: mul r1.y, r1.y, r1.y
  66: mul r1.x, r1.x, r1.y
  67: mad r0.y, r0.y, r1.x, l(1.000000)
  68: mul r0.y, r0.y, r0.z
  69: mul r0.z, r1.w, r1.w
  70: max r0.z, r0.z, l(0.002000)
  71: add r1.x, -r0.z, l(1.000000)
  72: mad r1.y, |r0.w|, r1.x, r0.z
  73: mad r1.x, r2.x, r1.x, r0.z
  74: mul r0.w, |r0.w|, r1.x
  75: mad r0.w, r2.x, r1.y, r0.w
  76: add r0.w, r0.w, l(0.000010)
  77: div r0.w, l(0.500000), r0.w
  78: mul r0.z, r0.z, r0.z
  79: mad r1.x, r2.y, r0.z, -r2.y
  80: mad r1.x, r1.x, r2.y, l(1.000000)
  81: mul r0.z, r0.z, l(0.318310)
  82: mad r1.x, r1.x, r1.x, l(0.000000)
  83: div r0.z, r0.z, r1.x
  84: mul r0.z, r0.z, r0.w
  85: mul r0.z, r0.z, l(3.141593)
  86: max r0.z, r0.z, l(0.000100)
  87: sqrt r0.z, r0.z
  88: mul r0.yz, r2.xxxx, r0.yyzy
  89: dp3 r0.w, r3.xyzx, r3.xyzx
  90: ne r0.w, r0.w, l(0.000000)
  91: and r0.w, r0.w, l(0x3f800000)
  92: mul r0.z, r0.w, r0.z
  93: mul r1.xyz, r0.yyyy, r5.xyzx
  94: mul r0.yzw, r5.xxyz, r0.zzzz
  95: add r0.x, -r0.x, l(1.000000)
  96: mul r1.w, r0.x, r0.x
  97: mul r1.w, r1.w, r1.w
  98: mul r0.x, r0.x, r1.w
  99: add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 100: mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
 101: mul r0.xyz, r0.yzwy, r2.xyzx
 102: mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 103: mov o0.w, l(1.000000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad r1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
   9: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  10: mul r0.xy, r1.yyyy, cb0[5].xyxx
  11: mad r0.xy, cb0[4].xyxx, r1.xxxx, r0.xyxx
  12: mad r0.xy, cb0[6].xyxx, r1.zzzz, r0.xyxx
  13: mad o1.zw, cb0[7].xxxy, r1.wwww, r0.xxxy
  14: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mov o4.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r3.xyz, r2.xyzx, cb0[9].xyzx
   6: mul r4.xy, v3.yyyy, cb0[5].xyxx
   7: mad r4.xy, cb0[4].xyxx, v3.xxxx, r4.xyxx
   8: mad r4.xy, cb0[6].xyxx, v3.zzzz, r4.xyxx
   9: add r4.xy, r4.xyxx, cb0[7].xyxx
  10: eq r1.w, cb3[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb3[0].y, l(1.000000)
  13:   mul r5.xyz, v3.yyyy, cb3[2].xyzx
  14:   mad r5.xyz, cb3[1].xyzx, v3.xxxx, r5.xyzx
  15:   mad r5.xyz, cb3[3].xyzx, v3.zzzz, r5.xyzx
  16:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  17:   movc r5.xyz, r1.wwww, r5.xyzx, v3.xyzx
  18:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  19:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  20:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  21:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  22:   max r5.x, r1.w, r2.w
  23:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  24: else 
  25:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
  28: sample r4.xyzw, r4.xyxx, t1.xyzw, s1
  29: mul r1.w, r1.w, r4.w
  30: mul r4.xyz, r1.wwww, cb0[2].xyzx
  31: dp3 r1.w, v2.xyzx, v2.xyzx
  32: rsq r1.w, r1.w
  33: mul r5.xyz, r1.wwww, v2.xyzx
  34: mad r2.xyz, r2.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  35: mad r2.xyz, cb0[8].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  37: mul r3.xyz, r1.wwww, r3.xyzx
  38: add r1.w, -cb0[8].x, l(1.000000)
  39: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  40: dp3 r0.w, r0.xyzx, r0.xyzx
  41: max r0.w, r0.w, l(0.001000)
  42: rsq r0.w, r0.w
  43: mul r0.xyz, r0.wwww, r0.xyzx
  44: dp3 r0.w, r5.xyzx, r1.xyzx
  45: dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
  46: dp3_sat r1.y, r5.xyzx, r0.xyzx
  47: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  48: mul r0.y, r0.x, r0.x
  49: dp2 r0.y, r0.yyyy, r1.wwww
  50: add r0.y, r0.y, l(-0.500000)
  51: add r0.z, -r1.x, l(1.000000)
  52: mul r1.z, r0.z, r0.z
  53: mul r1.z, r1.z, r1.z
  54: mul r0.z, r0.z, r1.z
  55: mad r0.z, r0.y, r0.z, l(1.000000)
  56: add r1.z, -|r0.w|, l(1.000000)
  57: mul r2.w, r1.z, r1.z
  58: mul r2.w, r2.w, r2.w
  59: mul r1.z, r1.z, r2.w
  60: mad r0.y, r0.y, r1.z, l(1.000000)
  61: mul r0.y, r0.y, r0.z
  62: mul r0.z, r1.w, r1.w
  63: max r0.z, r0.z, l(0.002000)
  64: add r1.z, -r0.z, l(1.000000)
  65: mad r1.w, |r0.w|, r1.z, r0.z
  66: mad r1.z, r1.x, r1.z, r0.z
  67: mul r0.w, |r0.w|, r1.z
  68: mad r0.w, r1.x, r1.w, r0.w
  69: add r0.w, r0.w, l(0.000010)
  70: div r0.w, l(0.500000), r0.w
  71: mul r0.z, r0.z, r0.z
  72: mad r1.z, r1.y, r0.z, -r1.y
  73: mad r1.y, r1.z, r1.y, l(1.000000)
  74: mul r0.z, r0.z, l(0.318310)
  75: mad r1.y, r1.y, r1.y, l(0.000000)
  76: div r0.z, r0.z, r1.y
  77: mul r0.z, r0.z, r0.w
  78: mul r0.z, r0.z, l(3.141593)
  79: max r0.z, r0.z, l(0.000100)
  80: sqrt r0.z, r0.z
  81: mul r0.yz, r1.xxxx, r0.yyzy
  82: dp3 r0.w, r2.xyzx, r2.xyzx
  83: ne r0.w, r0.w, l(0.000000)
  84: and r0.w, r0.w, l(0x3f800000)
  85: mul r0.z, r0.w, r0.z
  86: mul r1.xyz, r0.yyyy, r4.xyzx
  87: mul r0.yzw, r4.xxyz, r0.zzzz
  88: add r0.x, -r0.x, l(1.000000)
  89: mul r1.w, r0.x, r0.x
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r1.w
  92: add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  93: mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
  94: mul r0.xyz, r0.yzwy, r2.xyzx
  95: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
  96: mov o0.w, l(1.000000)
  97: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  18: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  19: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  20: mad o4.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 115 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v1.xyxx, t0.xyzw, s4
   9: mul r5.xyz, r4.xyzx, cb0[9].xyzx
  10: mul r6.xyzw, v3.yyyy, cb0[5].xyzw
  11: mad r6.xyzw, cb0[4].xyzw, v3.xxxx, r6.xyzw
  12: mad r6.xyzw, cb0[6].xyzw, v3.zzzz, r6.xyzw
  13: add r6.xyzw, r6.xyzw, cb0[7].xyzw
  14: mov r7.x, cb4[9].z
  15: mov r7.y, cb4[10].z
  16: mov r7.z, cb4[11].z
  17: dp3 r1.w, r2.xyzx, r7.xyzx
  18: add r2.xyz, v3.xyzx, -cb3[25].xyzx
  19: dp3 r2.x, r2.xyzx, r2.xyzx
  20: sqrt r2.x, r2.x
  21: add r2.x, -r1.w, r2.x
  22: mad r1.w, cb3[25].w, r2.x, r1.w
  23: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  24: eq r2.x, cb5[0].x, l(1.000000)
  25: if_nz r2.x
  26:   eq r2.x, cb5[0].y, l(1.000000)
  27:   mul r2.yzw, v3.yyyy, cb5[2].xxyz
  28:   mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  29:   mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  30:   add r2.yzw, r2.yyzw, cb5[4].xxyz
  31:   movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  32:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  33:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  34:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r2.x, r2.y, r3.w
  37:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
  42: mul r7.xyzw, v3.yyyy, cb3[9].xyzw
  43: mad r7.xyzw, cb3[8].xyzw, v3.xxxx, r7.xyzw
  44: mad r7.xyzw, cb3[10].xyzw, v3.zzzz, r7.xyzw
  45: add r7.xyzw, r7.xyzw, cb3[11].xyzw
  46: div r2.yzw, r7.xxyz, r7.wwww
  47: sample_c_lz r2.y, r2.yzyy, t4.xxxx, s1, r2.w
  48: add r2.z, -cb3[24].x, l(1.000000)
  49: mad r2.y, r2.y, r2.z, cb3[24].x
  50: add r2.x, -r2.y, r2.x
  51: mad r1.w, r1.w, r2.x, r2.y
  52: lt r2.x, l(0.000000), r6.z
  53: and r2.x, r2.x, l(0x3f800000)
  54: div r2.yz, r6.xxyx, r6.wwww
  55: add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  56: sample r7.xyzw, r2.yzyy, t1.xyzw, s2
  57: mul r2.x, r2.x, r7.w
  58: dp3 r2.y, r6.xyzx, r6.xyzx
  59: sample r6.xyzw, r2.yyyy, t2.xyzw, s3
  60: mul r2.x, r2.x, r6.x
  61: mul r1.w, r1.w, r2.x
  62: mul r2.xyz, r1.wwww, cb0[2].xyzx
  63: dp3 r1.w, v2.xyzx, v2.xyzx
  64: rsq r1.w, r1.w
  65: mul r6.xyz, r1.wwww, v2.xyzx
  66: mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  67: mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  68: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  69: mul r5.xyz, r1.wwww, r5.xyzx
  70: add r1.w, -cb0[8].x, l(1.000000)
  71: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  72: dp3 r0.w, r0.xyzx, r0.xyzx
  73: max r0.w, r0.w, l(0.001000)
  74: rsq r0.w, r0.w
  75: mul r0.xyz, r0.wwww, r0.xyzx
  76: dp3 r0.w, r6.xyzx, r3.xyzx
  77: dp3_sat r2.w, r6.xyzx, r1.xyzx
  78: dp3_sat r3.x, r6.xyzx, r0.xyzx
  79: dp3_sat r0.x, r1.xyzx, r0.xyzx
  80: mul r0.y, r0.x, r0.x
  81: dp2 r0.y, r0.yyyy, r1.wwww
  82: add r0.y, r0.y, l(-0.500000)
  83: add r0.z, -r2.w, l(1.000000)
  84: mul r1.x, r0.z, r0.z
  85: mul r1.x, r1.x, r1.x
  86: mul r0.z, r0.z, r1.x
  87: mad r0.z, r0.y, r0.z, l(1.000000)
  88: add r1.x, -|r0.w|, l(1.000000)
  89: mul r1.y, r1.x, r1.x
  90: mul r1.y, r1.y, r1.y
  91: mul r1.x, r1.x, r1.y
  92: mad r0.y, r0.y, r1.x, l(1.000000)
  93: mul r0.y, r0.y, r0.z
  94: mul r0.z, r1.w, r1.w
  95: max r0.z, r0.z, l(0.002000)
  96: add r1.x, -r0.z, l(1.000000)
  97: mad r1.y, |r0.w|, r1.x, r0.z
  98: mad r1.x, r2.w, r1.x, r0.z
  99: mul r0.w, |r0.w|, r1.x
 100: mad r0.w, r2.w, r1.y, r0.w
 101: add r0.w, r0.w, l(0.000010)
 102: div r0.w, l(0.500000), r0.w
 103: mul r0.z, r0.z, r0.z
 104: mad r1.x, r3.x, r0.z, -r3.x
 105: mad r1.x, r1.x, r3.x, l(1.000000)
 106: mul r0.z, r0.z, l(0.318310)
 107: mad r1.x, r1.x, r1.x, l(0.000000)
 108: div r0.z, r0.z, r1.x
 109: mul r0.z, r0.z, r0.w
 110: mul r0.z, r0.z, l(3.141593)
 111: max r0.z, r0.z, l(0.000100)
 112: sqrt r0.z, r0.z
 113: mul r0.yz, r2.wwww, r0.yyzy
 114: dp3 r0.w, r4.xyzx, r4.xyzx
 115: ne r0.w, r0.w, l(0.000000)
 116: and r0.w, r0.w, l(0x3f800000)
 117: mul r0.z, r0.w, r0.z
 118: mul r1.xyz, r0.yyyy, r2.xyzx
 119: mul r0.yzw, r2.xxyz, r0.zzzz
 120: add r0.x, -r0.x, l(1.000000)
 121: mul r1.w, r0.x, r0.x
 122: mul r1.w, r1.w, r1.w
 123: mul r0.x, r0.x, r1.w
 124: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 125: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 126: mul r0.xyz, r0.yzwy, r2.xyzx
 127: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 128: mov o0.w, l(1.000000)
 129: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _MainTex_ST at 240
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyzw, r0.yyyy, cb0[10].xyzw
  18: mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
  19: mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
  20: mad o4.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 12 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Float _Glossiness at 208
  Float _Metallic at 212
  Vector4 _Color at 224
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v1.xyxx, t0.xyzw, s4
   9: mul r5.xyz, r4.xyzx, cb0[14].xyzx
  10: mul r6.xyzw, v3.yyyy, cb0[10].xyzw
  11: mad r6.xyzw, cb0[9].xyzw, v3.xxxx, r6.xyzw
  12: mad r6.xyzw, cb0[11].xyzw, v3.zzzz, r6.xyzw
  13: add r6.xyzw, r6.xyzw, cb0[12].xyzw
  14: mov r7.x, cb4[9].z
  15: mov r7.y, cb4[10].z
  16: mov r7.z, cb4[11].z
  17: dp3 r1.w, r2.xyzx, r7.xyzx
  18: add r2.xyz, v3.xyzx, -cb3[25].xyzx
  19: dp3 r2.x, r2.xyzx, r2.xyzx
  20: sqrt r2.x, r2.x
  21: add r2.x, -r1.w, r2.x
  22: mad r1.w, cb3[25].w, r2.x, r1.w
  23: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  24: eq r2.x, cb5[0].x, l(1.000000)
  25: if_nz r2.x
  26:   eq r2.x, cb5[0].y, l(1.000000)
  27:   mul r2.yzw, v3.yyyy, cb5[2].xxyz
  28:   mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  29:   mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  30:   add r2.yzw, r2.yyzw, cb5[4].xxyz
  31:   movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  32:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  33:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  34:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r2.x, r2.y, r3.w
  37:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
  42: lt r2.y, r1.w, l(0.990000)
  43: if_nz r2.y
  44:   mul r7.xyzw, v3.yyyy, cb3[9].xyzw
  45:   mad r7.xyzw, cb3[8].xyzw, v3.xxxx, r7.xyzw
  46:   mad r7.xyzw, cb3[10].xyzw, v3.zzzz, r7.xyzw
  47:   add r7.xyzw, r7.xyzw, cb3[11].xyzw
  48:   div r2.yzw, r7.xxyz, r7.wwww
  49:   mad r7.xy, r2.yzyy, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  50:   round_ni r7.xy, r7.xyxx
  51:   mad r2.yz, r2.yyzy, cb0[8].zzwz, -r7.xxyx
  52:   add r8.xyzw, r2.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
  53:   mul r9.xw, r8.xxxz, r8.xxxz
  54:   mad r7.zw, r9.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r2.yyyz
  55:   add r8.xz, -r2.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
  56:   min r10.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
  57:   mad r8.xz, -r10.xxyx, r10.xxyx, r8.xxzx
  58:   max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  59:   mad r2.yz, -r2.yyzy, r2.yyzy, r8.yywy
  60:   mov r10.x, r7.z
  61:   mov r10.y, r8.x
  62:   mov r10.z, r2.y
  63:   mov r10.w, r9.x
  64:   mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  65:   mov r9.x, r7.w
  66:   mov r9.y, r8.z
  67:   mov r9.z, r2.z
  68:   mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  69:   add r9.xyzw, r10.ywyw, r10.xzxz
  70:   add r11.xyzw, r8.yyww, r8.xxzz
  71:   div r2.yz, r10.yywy, r9.zzwz
  72:   add r2.yz, r2.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
  73:   div r7.zw, r8.yyyw, r11.yyyw
  74:   add r7.zw, r7.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  75:   mul r8.xy, r2.yzyy, cb0[8].xxxx
  76:   mul r8.zw, r7.zzzw, cb0[8].yyyy
  77:   mul r9.xyzw, r9.xyzw, r11.xyzw
  78:   mad r10.xyzw, r7.xyxy, cb0[8].xyxy, r8.xzyz
  79:   sample_c_lz r2.y, r10.xyxx, t4.xxxx, s1, r2.w
  80:   sample_c_lz r2.z, r10.zwzz, t4.xxxx, s1, r2.w
  81:   mul r2.z, r2.z, r9.y
  82:   mad r2.y, r9.x, r2.y, r2.z
  83:   mad r7.xyzw, r7.xyxy, cb0[8].xyxy, r8.xwyw
  84:   sample_c_lz r2.z, r7.xyxx, t4.xxxx, s1, r2.w
  85:   mad r2.y, r9.z, r2.z, r2.y
  86:   sample_c_lz r2.z, r7.zwzz, t4.xxxx, s1, r2.w
  87:   mad r2.y, r9.w, r2.z, r2.y
  88:   add r2.z, -cb3[24].x, l(1.000000)
  89:   mad r2.y, r2.y, r2.z, cb3[24].x
  90: else 
  91:   mov r2.y, l(1.000000)
  92: endif 
  93: add r2.x, -r2.y, r2.x
  94: mad r1.w, r1.w, r2.x, r2.y
  95: lt r2.x, l(0.000000), r6.z
  96: and r2.x, r2.x, l(0x3f800000)
  97: div r2.yz, r6.xxyx, r6.wwww
  98: add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  99: sample r7.xyzw, r2.yzyy, t1.xyzw, s2
 100: mul r2.x, r2.x, r7.w
 101: dp3 r2.y, r6.xyzx, r6.xyzx
 102: sample r6.xyzw, r2.yyyy, t2.xyzw, s3
 103: mul r2.x, r2.x, r6.x
 104: mul r1.w, r1.w, r2.x
 105: mul r2.xyz, r1.wwww, cb0[2].xyzx
 106: dp3 r1.w, v2.xyzx, v2.xyzx
 107: rsq r1.w, r1.w
 108: mul r6.xyz, r1.wwww, v2.xyzx
 109: mad r4.xyz, r4.xyzx, cb0[14].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 110: mad r4.xyz, cb0[13].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 111: mad r1.w, -cb0[13].y, l(0.779084), l(0.779084)
 112: mul r5.xyz, r1.wwww, r5.xyzx
 113: add r1.w, -cb0[13].x, l(1.000000)
 114: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 115: dp3 r0.w, r0.xyzx, r0.xyzx
 116: max r0.w, r0.w, l(0.001000)
 117: rsq r0.w, r0.w
 118: mul r0.xyz, r0.wwww, r0.xyzx
 119: dp3 r0.w, r6.xyzx, r3.xyzx
 120: dp3_sat r2.w, r6.xyzx, r1.xyzx
 121: dp3_sat r3.x, r6.xyzx, r0.xyzx
 122: dp3_sat r0.x, r1.xyzx, r0.xyzx
 123: mul r0.y, r0.x, r0.x
 124: dp2 r0.y, r0.yyyy, r1.wwww
 125: add r0.y, r0.y, l(-0.500000)
 126: add r0.z, -r2.w, l(1.000000)
 127: mul r1.x, r0.z, r0.z
 128: mul r1.x, r1.x, r1.x
 129: mul r0.z, r0.z, r1.x
 130: mad r0.z, r0.y, r0.z, l(1.000000)
 131: add r1.x, -|r0.w|, l(1.000000)
 132: mul r1.y, r1.x, r1.x
 133: mul r1.y, r1.y, r1.y
 134: mul r1.x, r1.x, r1.y
 135: mad r0.y, r0.y, r1.x, l(1.000000)
 136: mul r0.y, r0.y, r0.z
 137: mul r0.z, r1.w, r1.w
 138: max r0.z, r0.z, l(0.002000)
 139: add r1.x, -r0.z, l(1.000000)
 140: mad r1.y, |r0.w|, r1.x, r0.z
 141: mad r1.x, r2.w, r1.x, r0.z
 142: mul r0.w, |r0.w|, r1.x
 143: mad r0.w, r2.w, r1.y, r0.w
 144: add r0.w, r0.w, l(0.000010)
 145: div r0.w, l(0.500000), r0.w
 146: mul r0.z, r0.z, r0.z
 147: mad r1.x, r3.x, r0.z, -r3.x
 148: mad r1.x, r1.x, r3.x, l(1.000000)
 149: mul r0.z, r0.z, l(0.318310)
 150: mad r1.x, r1.x, r1.x, l(0.000000)
 151: div r0.z, r0.z, r1.x
 152: mul r0.z, r0.z, r0.w
 153: mul r0.z, r0.z, l(3.141593)
 154: max r0.z, r0.z, l(0.000100)
 155: sqrt r0.z, r0.z
 156: mul r0.yz, r2.wwww, r0.yyzy
 157: dp3 r0.w, r4.xyzx, r4.xyzx
 158: ne r0.w, r0.w, l(0.000000)
 159: and r0.w, r0.w, l(0x3f800000)
 160: mul r0.z, r0.w, r0.z
 161: mul r1.xyz, r0.yyyy, r2.xyzx
 162: mul r0.yzw, r2.xxyz, r0.zzzz
 163: add r0.x, -r0.x, l(1.000000)
 164: mul r1.w, r0.x, r0.x
 165: mul r1.w, r1.w, r1.w
 166: mul r0.x, r0.x, r1.w
 167: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 169: mul r0.xyz, r0.yzwy, r2.xyzx
 170: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 171: mov o0.w, l(1.000000)
 172: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 19 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  11: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mul r0.y, r0.y, cb1[5].x
  18: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  19: mov o4.zw, r0.zzzw
  20: add o4.xy, r1.zzzz, r1.xwxx
  21: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: mov r4.x, cb4[9].z
   7: mov r4.y, cb4[10].z
   8: mov r4.z, cb4[11].z
   9: dp3 r1.w, r0.xyzx, r4.xyzx
  10: add r4.xyz, v3.xyzx, -cb3[25].xyzx
  11: dp3 r2.w, r4.xyzx, r4.xyzx
  12: sqrt r2.w, r2.w
  13: add r2.w, -r1.w, r2.w
  14: mad r1.w, cb3[25].w, r2.w, r1.w
  15: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  16: eq r2.w, cb5[0].x, l(1.000000)
  17: if_nz r2.w
  18:   eq r2.w, cb5[0].y, l(1.000000)
  19:   mul r4.xyz, v3.yyyy, cb5[2].xyzx
  20:   mad r4.xyz, cb5[1].xyzx, v3.xxxx, r4.xyzx
  21:   mad r4.xyz, cb5[3].xyzx, v3.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  23:   movc r4.xyz, r2.wwww, r4.xyzx, v3.xyzx
  24:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  26:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r2.w, r3.w
  29:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  34: div r4.xy, v4.xyxx, v4.wwww
  35: sample r4.xyzw, r4.xyxx, t1.xyzw, s1
  36: add r2.w, r2.w, -r4.x
  37: mad r1.w, r1.w, r2.w, r4.x
  38: mul r4.xyz, r1.wwww, cb0[2].xyzx
  39: dp3 r1.w, v2.xyzx, v2.xyzx
  40: rsq r1.w, r1.w
  41: mul r5.xyz, r1.wwww, v2.xyzx
  42: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  43: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mad r1.w, -cb0[4].y, l(0.779084), l(0.779084)
  45: mul r3.xyz, r1.wwww, r3.xyzx
  46: add r1.w, -cb0[4].x, l(1.000000)
  47: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  48: dp3 r0.w, r0.xyzx, r0.xyzx
  49: max r0.w, r0.w, l(0.001000)
  50: rsq r0.w, r0.w
  51: mul r0.xyz, r0.wwww, r0.xyzx
  52: dp3 r0.w, r5.xyzx, r1.xyzx
  53: dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
  54: dp3_sat r1.y, r5.xyzx, r0.xyzx
  55: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  56: mul r0.y, r0.x, r0.x
  57: dp2 r0.y, r0.yyyy, r1.wwww
  58: add r0.y, r0.y, l(-0.500000)
  59: add r0.z, -r1.x, l(1.000000)
  60: mul r1.z, r0.z, r0.z
  61: mul r1.z, r1.z, r1.z
  62: mul r0.z, r0.z, r1.z
  63: mad r0.z, r0.y, r0.z, l(1.000000)
  64: add r1.z, -|r0.w|, l(1.000000)
  65: mul r2.w, r1.z, r1.z
  66: mul r2.w, r2.w, r2.w
  67: mul r1.z, r1.z, r2.w
  68: mad r0.y, r0.y, r1.z, l(1.000000)
  69: mul r0.y, r0.y, r0.z
  70: mul r0.z, r1.w, r1.w
  71: max r0.z, r0.z, l(0.002000)
  72: add r1.z, -r0.z, l(1.000000)
  73: mad r1.w, |r0.w|, r1.z, r0.z
  74: mad r1.z, r1.x, r1.z, r0.z
  75: mul r0.w, |r0.w|, r1.z
  76: mad r0.w, r1.x, r1.w, r0.w
  77: add r0.w, r0.w, l(0.000010)
  78: div r0.w, l(0.500000), r0.w
  79: mul r0.z, r0.z, r0.z
  80: mad r1.z, r1.y, r0.z, -r1.y
  81: mad r1.y, r1.z, r1.y, l(1.000000)
  82: mul r0.z, r0.z, l(0.318310)
  83: mad r1.y, r1.y, r1.y, l(0.000000)
  84: div r0.z, r0.z, r1.y
  85: mul r0.z, r0.z, r0.w
  86: mul r0.z, r0.z, l(3.141593)
  87: max r0.z, r0.z, l(0.000100)
  88: sqrt r0.z, r0.z
  89: mul r0.yz, r1.xxxx, r0.yyzy
  90: dp3 r0.w, r2.xyzx, r2.xyzx
  91: ne r0.w, r0.w, l(0.000000)
  92: and r0.w, r0.w, l(0x3f800000)
  93: mul r0.z, r0.w, r0.z
  94: mul r1.xyz, r0.yyyy, r4.xyzx
  95: mul r0.yzw, r4.xxyz, r0.zzzz
  96: add r0.x, -r0.x, l(1.000000)
  97: mul r1.w, r0.x, r0.x
  98: mul r1.w, r1.w, r1.w
  99: mul r0.x, r0.x, r1.w
 100: add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
 102: mul r0.xyz, r0.yzwy, r2.xyzx
 103: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   5: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   7: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   8: mov o0.xyzw, r1.xyzw
   9: mad r2.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
  10: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  11: mul r0.xy, r2.yyyy, cb0[5].xyxx
  12: mad r0.xy, cb0[4].xyxx, r2.xxxx, r0.xyxx
  13: mad r0.xy, cb0[6].xyxx, r2.zzzz, r0.xyxx
  14: mad o1.zw, cb0[7].xxxy, r2.wwww, r0.xxxy
  15: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mul r0.x, r1.y, cb1[5].x
  23: mul r0.w, r0.x, l(0.500000)
  24: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  25: mov o4.zw, r1.zzzw
  26: add o4.xy, r0.zzzz, r0.xwxx
  27: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r3.xyz, r2.xyzx, cb0[9].xyzx
   6: mul r4.xy, v3.yyyy, cb0[5].xyxx
   7: mad r4.xy, cb0[4].xyxx, v3.xxxx, r4.xyxx
   8: mad r4.xy, cb0[6].xyxx, v3.zzzz, r4.xyxx
   9: add r4.xy, r4.xyxx, cb0[7].xyxx
  10: mov r5.x, cb4[9].z
  11: mov r5.y, cb4[10].z
  12: mov r5.z, cb4[11].z
  13: dp3 r1.w, r0.xyzx, r5.xyzx
  14: add r5.xyz, v3.xyzx, -cb3[25].xyzx
  15: dp3 r2.w, r5.xyzx, r5.xyzx
  16: sqrt r2.w, r2.w
  17: add r2.w, -r1.w, r2.w
  18: mad r1.w, cb3[25].w, r2.w, r1.w
  19: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  20: eq r2.w, cb5[0].x, l(1.000000)
  21: if_nz r2.w
  22:   eq r2.w, cb5[0].y, l(1.000000)
  23:   mul r5.xyz, v3.yyyy, cb5[2].xyzx
  24:   mad r5.xyz, cb5[1].xyzx, v3.xxxx, r5.xyzx
  25:   mad r5.xyz, cb5[3].xyzx, v3.zzzz, r5.xyzx
  26:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  27:   movc r5.xyz, r2.wwww, r5.xyzx, v3.xyzx
  28:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  29:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  30:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  31:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  32:   max r5.x, r2.w, r3.w
  33:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  38: div r4.zw, v4.xxxy, v4.wwww
  39: sample r5.xyzw, r4.zwzz, t1.xyzw, s1
  40: add r2.w, r2.w, -r5.x
  41: mad r1.w, r1.w, r2.w, r5.x
  42: sample r4.xyzw, r4.xyxx, t2.xyzw, s2
  43: mul r1.w, r1.w, r4.w
  44: mul r4.xyz, r1.wwww, cb0[2].xyzx
  45: dp3 r1.w, v2.xyzx, v2.xyzx
  46: rsq r1.w, r1.w
  47: mul r5.xyz, r1.wwww, v2.xyzx
  48: mad r2.xyz, r2.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  49: mad r2.xyz, cb0[8].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  50: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  51: mul r3.xyz, r1.wwww, r3.xyzx
  52: add r1.w, -cb0[8].x, l(1.000000)
  53: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  54: dp3 r0.w, r0.xyzx, r0.xyzx
  55: max r0.w, r0.w, l(0.001000)
  56: rsq r0.w, r0.w
  57: mul r0.xyz, r0.wwww, r0.xyzx
  58: dp3 r0.w, r5.xyzx, r1.xyzx
  59: dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
  60: dp3_sat r1.y, r5.xyzx, r0.xyzx
  61: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  62: mul r0.y, r0.x, r0.x
  63: dp2 r0.y, r0.yyyy, r1.wwww
  64: add r0.y, r0.y, l(-0.500000)
  65: add r0.z, -r1.x, l(1.000000)
  66: mul r1.z, r0.z, r0.z
  67: mul r1.z, r1.z, r1.z
  68: mul r0.z, r0.z, r1.z
  69: mad r0.z, r0.y, r0.z, l(1.000000)
  70: add r1.z, -|r0.w|, l(1.000000)
  71: mul r2.w, r1.z, r1.z
  72: mul r2.w, r2.w, r2.w
  73: mul r1.z, r1.z, r2.w
  74: mad r0.y, r0.y, r1.z, l(1.000000)
  75: mul r0.y, r0.y, r0.z
  76: mul r0.z, r1.w, r1.w
  77: max r0.z, r0.z, l(0.002000)
  78: add r1.z, -r0.z, l(1.000000)
  79: mad r1.w, |r0.w|, r1.z, r0.z
  80: mad r1.z, r1.x, r1.z, r0.z
  81: mul r0.w, |r0.w|, r1.z
  82: mad r0.w, r1.x, r1.w, r0.w
  83: add r0.w, r0.w, l(0.000010)
  84: div r0.w, l(0.500000), r0.w
  85: mul r0.z, r0.z, r0.z
  86: mad r1.z, r1.y, r0.z, -r1.y
  87: mad r1.y, r1.z, r1.y, l(1.000000)
  88: mul r0.z, r0.z, l(0.318310)
  89: mad r1.y, r1.y, r1.y, l(0.000000)
  90: div r0.z, r0.z, r1.y
  91: mul r0.z, r0.z, r0.w
  92: mul r0.z, r0.z, l(3.141593)
  93: max r0.z, r0.z, l(0.000100)
  94: sqrt r0.z, r0.z
  95: mul r0.yz, r1.xxxx, r0.yyzy
  96: dp3 r0.w, r2.xyzx, r2.xyzx
  97: ne r0.w, r0.w, l(0.000000)
  98: and r0.w, r0.w, l(0x3f800000)
  99: mul r0.z, r0.w, r0.z
 100: mul r1.xyz, r0.yyyy, r4.xyzx
 101: mul r0.yzw, r4.xxyz, r0.zzzz
 102: add r0.x, -r0.x, l(1.000000)
 103: mul r1.w, r0.x, r0.x
 104: mul r1.w, r1.w, r1.w
 105: mul r0.x, r0.x, r1.w
 106: add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
 108: mul r0.xyz, r0.yzwy, r2.xyzx
 109: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 113 math, 8 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
   9: mul r5.xyz, r4.xyzx, cb0[9].xyzx
  10: mul r6.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
  12: mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
  13: add r6.xyz, r6.xyzx, cb0[7].xyzx
  14: mov r7.x, cb4[9].z
  15: mov r7.y, cb4[10].z
  16: mov r7.z, cb4[11].z
  17: dp3 r1.w, r2.xyzx, r7.xyzx
  18: add r2.xyz, v3.xyzx, -cb3[25].xyzx
  19: dp3 r2.x, r2.xyzx, r2.xyzx
  20: sqrt r2.x, r2.x
  21: add r2.x, -r1.w, r2.x
  22: mad r1.w, cb3[25].w, r2.x, r1.w
  23: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  24: eq r2.x, cb5[0].x, l(1.000000)
  25: if_nz r2.x
  26:   eq r2.x, cb5[0].y, l(1.000000)
  27:   mul r2.yzw, v3.yyyy, cb5[2].xxyz
  28:   mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  29:   mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  30:   add r2.yzw, r2.yyzw, cb5[4].xxyz
  31:   movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  32:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  33:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  34:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r2.x, r2.y, r3.w
  37:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  38: else 
  39:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
  42: add r2.yzw, v3.xxyz, -cb2[1].xxyz
  43: max r3.w, |r2.z|, |r2.y|
  44: max r3.w, |r2.w|, r3.w
  45: add r3.w, r3.w, -cb2[2].z
  46: max r3.w, r3.w, l(0.000010)
  47: mul r3.w, r3.w, cb2[2].w
  48: div r3.w, cb2[2].y, r3.w
  49: add r3.w, r3.w, -cb2[2].x
  50: add r3.w, -r3.w, l(1.000000)
  51: sample_c_lz r2.y, r2.yzwy, t3.xxxx, s1, r3.w
  52: add r2.z, -cb3[24].x, l(1.000000)
  53: mad r2.y, r2.y, r2.z, cb3[24].x
  54: add r2.x, -r2.y, r2.x
  55: mad r1.w, r1.w, r2.x, r2.y
  56: dp3 r2.x, r6.xyzx, r6.xyzx
  57: sample r2.xyzw, r2.xxxx, t1.xyzw, s2
  58: mul r1.w, r1.w, r2.x
  59: mul r2.xyz, r1.wwww, cb0[2].xyzx
  60: dp3 r1.w, v2.xyzx, v2.xyzx
  61: rsq r1.w, r1.w
  62: mul r6.xyz, r1.wwww, v2.xyzx
  63: mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  64: mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  65: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  66: mul r5.xyz, r1.wwww, r5.xyzx
  67: add r1.w, -cb0[8].x, l(1.000000)
  68: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  69: dp3 r0.w, r0.xyzx, r0.xyzx
  70: max r0.w, r0.w, l(0.001000)
  71: rsq r0.w, r0.w
  72: mul r0.xyz, r0.wwww, r0.xyzx
  73: dp3 r0.w, r6.xyzx, r3.xyzx
  74: dp3_sat r2.w, r6.xyzx, r1.xyzx
  75: dp3_sat r3.x, r6.xyzx, r0.xyzx
  76: dp3_sat r0.x, r1.xyzx, r0.xyzx
  77: mul r0.y, r0.x, r0.x
  78: dp2 r0.y, r0.yyyy, r1.wwww
  79: add r0.y, r0.y, l(-0.500000)
  80: add r0.z, -r2.w, l(1.000000)
  81: mul r1.x, r0.z, r0.z
  82: mul r1.x, r1.x, r1.x
  83: mul r0.z, r0.z, r1.x
  84: mad r0.z, r0.y, r0.z, l(1.000000)
  85: add r1.x, -|r0.w|, l(1.000000)
  86: mul r1.y, r1.x, r1.x
  87: mul r1.y, r1.y, r1.y
  88: mul r1.x, r1.x, r1.y
  89: mad r0.y, r0.y, r1.x, l(1.000000)
  90: mul r0.y, r0.y, r0.z
  91: mul r0.z, r1.w, r1.w
  92: max r0.z, r0.z, l(0.002000)
  93: add r1.x, -r0.z, l(1.000000)
  94: mad r1.y, |r0.w|, r1.x, r0.z
  95: mad r1.x, r2.w, r1.x, r0.z
  96: mul r0.w, |r0.w|, r1.x
  97: mad r0.w, r2.w, r1.y, r0.w
  98: add r0.w, r0.w, l(0.000010)
  99: div r0.w, l(0.500000), r0.w
 100: mul r0.z, r0.z, r0.z
 101: mad r1.x, r3.x, r0.z, -r3.x
 102: mad r1.x, r1.x, r3.x, l(1.000000)
 103: mul r0.z, r0.z, l(0.318310)
 104: mad r1.x, r1.x, r1.x, l(0.000000)
 105: div r0.z, r0.z, r1.x
 106: mul r0.z, r0.z, r0.w
 107: mul r0.z, r0.z, l(3.141593)
 108: max r0.z, r0.z, l(0.000100)
 109: sqrt r0.z, r0.z
 110: mul r0.yz, r2.wwww, r0.yyzy
 111: dp3 r0.w, r4.xyzx, r4.xyzx
 112: ne r0.w, r0.w, l(0.000000)
 113: and r0.w, r0.w, l(0x3f800000)
 114: mul r0.z, r0.w, r0.z
 115: mul r1.xyz, r0.yyyy, r2.xyzx
 116: mul r0.yzw, r2.xxyz, r0.zzzz
 117: add r0.x, -r0.x, l(1.000000)
 118: mul r1.w, r0.x, r0.x
 119: mul r1.w, r1.w, r1.w
 120: mul r0.x, r0.x, r1.w
 121: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 122: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 123: mul r0.xyz, r0.yzwy, r2.xyzx
 124: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 125: mov o0.w, l(1.000000)
 126: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 9 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
   9: mul r5.xyz, r4.xyzx, cb0[9].xyzx
  10: mul r6.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
  12: mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
  13: add r6.xyz, r6.xyzx, cb0[7].xyzx
  14: mov r7.x, cb4[9].z
  15: mov r7.y, cb4[10].z
  16: mov r7.z, cb4[11].z
  17: dp3 r1.w, r2.xyzx, r7.xyzx
  18: add r2.xyz, v3.xyzx, -cb3[25].xyzx
  19: dp3 r2.x, r2.xyzx, r2.xyzx
  20: sqrt r2.x, r2.x
  21: add r2.x, -r1.w, r2.x
  22: mad r1.w, cb3[25].w, r2.x, r1.w
  23: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  24: eq r2.x, cb5[0].x, l(1.000000)
  25: if_nz r2.x
  26:   eq r2.x, cb5[0].y, l(1.000000)
  27:   mul r2.yzw, v3.yyyy, cb5[2].xxyz
  28:   mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  29:   mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  30:   add r2.yzw, r2.yyzw, cb5[4].xxyz
  31:   movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  32:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  33:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  34:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r2.x, r2.y, r3.w
  37:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  38: else 
  39:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
  42: lt r2.y, r1.w, l(0.990000)
  43: if_nz r2.y
  44:   add r2.yzw, v3.xxyz, -cb2[1].xxyz
  45:   max r3.w, |r2.z|, |r2.y|
  46:   max r3.w, |r2.w|, r3.w
  47:   add r3.w, r3.w, -cb2[2].z
  48:   max r3.w, r3.w, l(0.000010)
  49:   mul r3.w, r3.w, cb2[2].w
  50:   div r3.w, cb2[2].y, r3.w
  51:   add r3.w, r3.w, -cb2[2].x
  52:   add r3.w, -r3.w, l(1.000000)
  53:   add r7.xyz, r2.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
  54:   sample_c_lz r7.x, r7.xyzx, t3.xxxx, s1, r3.w
  55:   add r8.xyz, r2.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
  56:   sample_c_lz r7.y, r8.xyzx, t3.xxxx, s1, r3.w
  57:   add r8.xyz, r2.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
  58:   sample_c_lz r7.z, r8.xyzx, t3.xxxx, s1, r3.w
  59:   add r2.yzw, r2.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
  60:   sample_c_lz r7.w, r2.yzwy, t3.xxxx, s1, r3.w
  61:   dp4 r2.y, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  62:   add r2.z, -cb3[24].x, l(1.000000)
  63:   mad r2.y, r2.y, r2.z, cb3[24].x
  64: else 
  65:   mov r2.y, l(1.000000)
  66: endif 
  67: add r2.x, -r2.y, r2.x
  68: mad r1.w, r1.w, r2.x, r2.y
  69: dp3 r2.x, r6.xyzx, r6.xyzx
  70: sample r2.xyzw, r2.xxxx, t1.xyzw, s2
  71: mul r1.w, r1.w, r2.x
  72: mul r2.xyz, r1.wwww, cb0[2].xyzx
  73: dp3 r1.w, v2.xyzx, v2.xyzx
  74: rsq r1.w, r1.w
  75: mul r6.xyz, r1.wwww, v2.xyzx
  76: mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  77: mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  78: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  79: mul r5.xyz, r1.wwww, r5.xyzx
  80: add r1.w, -cb0[8].x, l(1.000000)
  81: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  82: dp3 r0.w, r0.xyzx, r0.xyzx
  83: max r0.w, r0.w, l(0.001000)
  84: rsq r0.w, r0.w
  85: mul r0.xyz, r0.wwww, r0.xyzx
  86: dp3 r0.w, r6.xyzx, r3.xyzx
  87: dp3_sat r2.w, r6.xyzx, r1.xyzx
  88: dp3_sat r3.x, r6.xyzx, r0.xyzx
  89: dp3_sat r0.x, r1.xyzx, r0.xyzx
  90: mul r0.y, r0.x, r0.x
  91: dp2 r0.y, r0.yyyy, r1.wwww
  92: add r0.y, r0.y, l(-0.500000)
  93: add r0.z, -r2.w, l(1.000000)
  94: mul r1.x, r0.z, r0.z
  95: mul r1.x, r1.x, r1.x
  96: mul r0.z, r0.z, r1.x
  97: mad r0.z, r0.y, r0.z, l(1.000000)
  98: add r1.x, -|r0.w|, l(1.000000)
  99: mul r1.y, r1.x, r1.x
 100: mul r1.y, r1.y, r1.y
 101: mul r1.x, r1.x, r1.y
 102: mad r0.y, r0.y, r1.x, l(1.000000)
 103: mul r0.y, r0.y, r0.z
 104: mul r0.z, r1.w, r1.w
 105: max r0.z, r0.z, l(0.002000)
 106: add r1.x, -r0.z, l(1.000000)
 107: mad r1.y, |r0.w|, r1.x, r0.z
 108: mad r1.x, r2.w, r1.x, r0.z
 109: mul r0.w, |r0.w|, r1.x
 110: mad r0.w, r2.w, r1.y, r0.w
 111: add r0.w, r0.w, l(0.000010)
 112: div r0.w, l(0.500000), r0.w
 113: mul r0.z, r0.z, r0.z
 114: mad r1.x, r3.x, r0.z, -r3.x
 115: mad r1.x, r1.x, r3.x, l(1.000000)
 116: mul r0.z, r0.z, l(0.318310)
 117: mad r1.x, r1.x, r1.x, l(0.000000)
 118: div r0.z, r0.z, r1.x
 119: mul r0.z, r0.z, r0.w
 120: mul r0.z, r0.z, l(3.141593)
 121: max r0.z, r0.z, l(0.000100)
 122: sqrt r0.z, r0.z
 123: mul r0.yz, r2.wwww, r0.yyzy
 124: dp3 r0.w, r4.xyzx, r4.xyzx
 125: ne r0.w, r0.w, l(0.000000)
 126: and r0.w, r0.w, l(0x3f800000)
 127: mul r0.z, r0.w, r0.z
 128: mul r1.xyz, r0.yyyy, r2.xyzx
 129: mul r0.yzw, r2.xxyz, r0.zzzz
 130: add r0.x, -r0.x, l(1.000000)
 131: mul r1.w, r0.x, r0.x
 132: mul r1.w, r1.w, r1.w
 133: mul r0.x, r0.x, r1.w
 134: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 135: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 136: mul r0.xyz, r0.yzwy, r2.xyzx
 137: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 138: mov o0.w, l(1.000000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v1.xyxx, t0.xyzw, s4
   9: mul r5.xyz, r4.xyzx, cb0[9].xyzx
  10: mul r6.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
  12: mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
  13: add r6.xyz, r6.xyzx, cb0[7].xyzx
  14: mov r7.x, cb4[9].z
  15: mov r7.y, cb4[10].z
  16: mov r7.z, cb4[11].z
  17: dp3 r1.w, r2.xyzx, r7.xyzx
  18: add r2.xyz, v3.xyzx, -cb3[25].xyzx
  19: dp3 r2.x, r2.xyzx, r2.xyzx
  20: sqrt r2.x, r2.x
  21: add r2.x, -r1.w, r2.x
  22: mad r1.w, cb3[25].w, r2.x, r1.w
  23: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  24: eq r2.x, cb5[0].x, l(1.000000)
  25: if_nz r2.x
  26:   eq r2.x, cb5[0].y, l(1.000000)
  27:   mul r2.yzw, v3.yyyy, cb5[2].xxyz
  28:   mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  29:   mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  30:   add r2.yzw, r2.yyzw, cb5[4].xxyz
  31:   movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  32:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  33:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  34:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r2.x, r2.y, r3.w
  37:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
  42: add r2.yzw, v3.xxyz, -cb2[1].xxyz
  43: max r3.w, |r2.z|, |r2.y|
  44: max r3.w, |r2.w|, r3.w
  45: add r3.w, r3.w, -cb2[2].z
  46: max r3.w, r3.w, l(0.000010)
  47: mul r3.w, r3.w, cb2[2].w
  48: div r3.w, cb2[2].y, r3.w
  49: add r3.w, r3.w, -cb2[2].x
  50: add r3.w, -r3.w, l(1.000000)
  51: sample_c_lz r2.y, r2.yzwy, t4.xxxx, s1, r3.w
  52: add r2.z, -cb3[24].x, l(1.000000)
  53: mad r2.y, r2.y, r2.z, cb3[24].x
  54: add r2.x, -r2.y, r2.x
  55: mad r1.w, r1.w, r2.x, r2.y
  56: dp3 r2.x, r6.xyzx, r6.xyzx
  57: sample r2.xyzw, r2.xxxx, t1.xyzw, s3
  58: sample r6.xyzw, r6.xyzx, t2.xyzw, s2
  59: mul r2.x, r2.x, r6.w
  60: mul r1.w, r1.w, r2.x
  61: mul r2.xyz, r1.wwww, cb0[2].xyzx
  62: dp3 r1.w, v2.xyzx, v2.xyzx
  63: rsq r1.w, r1.w
  64: mul r6.xyz, r1.wwww, v2.xyzx
  65: mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  66: mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  67: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  68: mul r5.xyz, r1.wwww, r5.xyzx
  69: add r1.w, -cb0[8].x, l(1.000000)
  70: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  71: dp3 r0.w, r0.xyzx, r0.xyzx
  72: max r0.w, r0.w, l(0.001000)
  73: rsq r0.w, r0.w
  74: mul r0.xyz, r0.wwww, r0.xyzx
  75: dp3 r0.w, r6.xyzx, r3.xyzx
  76: dp3_sat r2.w, r6.xyzx, r1.xyzx
  77: dp3_sat r3.x, r6.xyzx, r0.xyzx
  78: dp3_sat r0.x, r1.xyzx, r0.xyzx
  79: mul r0.y, r0.x, r0.x
  80: dp2 r0.y, r0.yyyy, r1.wwww
  81: add r0.y, r0.y, l(-0.500000)
  82: add r0.z, -r2.w, l(1.000000)
  83: mul r1.x, r0.z, r0.z
  84: mul r1.x, r1.x, r1.x
  85: mul r0.z, r0.z, r1.x
  86: mad r0.z, r0.y, r0.z, l(1.000000)
  87: add r1.x, -|r0.w|, l(1.000000)
  88: mul r1.y, r1.x, r1.x
  89: mul r1.y, r1.y, r1.y
  90: mul r1.x, r1.x, r1.y
  91: mad r0.y, r0.y, r1.x, l(1.000000)
  92: mul r0.y, r0.y, r0.z
  93: mul r0.z, r1.w, r1.w
  94: max r0.z, r0.z, l(0.002000)
  95: add r1.x, -r0.z, l(1.000000)
  96: mad r1.y, |r0.w|, r1.x, r0.z
  97: mad r1.x, r2.w, r1.x, r0.z
  98: mul r0.w, |r0.w|, r1.x
  99: mad r0.w, r2.w, r1.y, r0.w
 100: add r0.w, r0.w, l(0.000010)
 101: div r0.w, l(0.500000), r0.w
 102: mul r0.z, r0.z, r0.z
 103: mad r1.x, r3.x, r0.z, -r3.x
 104: mad r1.x, r1.x, r3.x, l(1.000000)
 105: mul r0.z, r0.z, l(0.318310)
 106: mad r1.x, r1.x, r1.x, l(0.000000)
 107: div r0.z, r0.z, r1.x
 108: mul r0.z, r0.z, r0.w
 109: mul r0.z, r0.z, l(3.141593)
 110: max r0.z, r0.z, l(0.000100)
 111: sqrt r0.z, r0.z
 112: mul r0.yz, r2.wwww, r0.yyzy
 113: dp3 r0.w, r4.xyzx, r4.xyzx
 114: ne r0.w, r0.w, l(0.000000)
 115: and r0.w, r0.w, l(0x3f800000)
 116: mul r0.z, r0.w, r0.z
 117: mul r1.xyz, r0.yyyy, r2.xyzx
 118: mul r0.yzw, r2.xxyz, r0.zzzz
 119: add r0.x, -r0.x, l(1.000000)
 120: mul r1.w, r0.x, r0.x
 121: mul r1.w, r1.w, r1.w
 122: mul r0.x, r0.x, r1.w
 123: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 124: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 125: mul r0.xyz, r0.yzwy, r2.xyzx
 126: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 127: mov o0.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul o2.xyz, r1.wwww, r1.xyzx
  15: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  17: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  18: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  19: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  20: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  21: mov o5.xyzw, l(0,0,0,0)
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 120 math, 9 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v3.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v3.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v1.xyxx, t0.xyzw, s4
   9: mul r5.xyz, r4.xyzx, cb0[9].xyzx
  10: mul r6.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r6.xyz, cb0[4].xyzx, v3.xxxx, r6.xyzx
  12: mad r6.xyz, cb0[6].xyzx, v3.zzzz, r6.xyzx
  13: add r6.xyz, r6.xyzx, cb0[7].xyzx
  14: mov r7.x, cb4[9].z
  15: mov r7.y, cb4[10].z
  16: mov r7.z, cb4[11].z
  17: dp3 r1.w, r2.xyzx, r7.xyzx
  18: add r2.xyz, v3.xyzx, -cb3[25].xyzx
  19: dp3 r2.x, r2.xyzx, r2.xyzx
  20: sqrt r2.x, r2.x
  21: add r2.x, -r1.w, r2.x
  22: mad r1.w, cb3[25].w, r2.x, r1.w
  23: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  24: eq r2.x, cb5[0].x, l(1.000000)
  25: if_nz r2.x
  26:   eq r2.x, cb5[0].y, l(1.000000)
  27:   mul r2.yzw, v3.yyyy, cb5[2].xxyz
  28:   mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  29:   mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  30:   add r2.yzw, r2.yyzw, cb5[4].xxyz
  31:   movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  32:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  33:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  34:   mad r2.y, r2.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r2.x, r2.y, r3.w
  37:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
  42: lt r2.y, r1.w, l(0.990000)
  43: if_nz r2.y
  44:   add r2.yzw, v3.xxyz, -cb2[1].xxyz
  45:   max r3.w, |r2.z|, |r2.y|
  46:   max r3.w, |r2.w|, r3.w
  47:   add r3.w, r3.w, -cb2[2].z
  48:   max r3.w, r3.w, l(0.000010)
  49:   mul r3.w, r3.w, cb2[2].w
  50:   div r3.w, cb2[2].y, r3.w
  51:   add r3.w, r3.w, -cb2[2].x
  52:   add r3.w, -r3.w, l(1.000000)
  53:   add r7.xyz, r2.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
  54:   sample_c_lz r7.x, r7.xyzx, t4.xxxx, s1, r3.w
  55:   add r8.xyz, r2.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
  56:   sample_c_lz r7.y, r8.xyzx, t4.xxxx, s1, r3.w
  57:   add r8.xyz, r2.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
  58:   sample_c_lz r7.z, r8.xyzx, t4.xxxx, s1, r3.w
  59:   add r2.yzw, r2.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
  60:   sample_c_lz r7.w, r2.yzwy, t4.xxxx, s1, r3.w
  61:   dp4 r2.y, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  62:   add r2.z, -cb3[24].x, l(1.000000)
  63:   mad r2.y, r2.y, r2.z, cb3[24].x
  64: else 
  65:   mov r2.y, l(1.000000)
  66: endif 
  67: add r2.x, -r2.y, r2.x
  68: mad r1.w, r1.w, r2.x, r2.y
  69: dp3 r2.x, r6.xyzx, r6.xyzx
  70: sample r2.xyzw, r2.xxxx, t1.xyzw, s3
  71: sample r6.xyzw, r6.xyzx, t2.xyzw, s2
  72: mul r2.x, r2.x, r6.w
  73: mul r1.w, r1.w, r2.x
  74: mul r2.xyz, r1.wwww, cb0[2].xyzx
  75: dp3 r1.w, v2.xyzx, v2.xyzx
  76: rsq r1.w, r1.w
  77: mul r6.xyz, r1.wwww, v2.xyzx
  78: mad r4.xyz, r4.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  79: mad r4.xyz, cb0[8].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  80: mad r1.w, -cb0[8].y, l(0.779084), l(0.779084)
  81: mul r5.xyz, r1.wwww, r5.xyzx
  82: add r1.w, -cb0[8].x, l(1.000000)
  83: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  84: dp3 r0.w, r0.xyzx, r0.xyzx
  85: max r0.w, r0.w, l(0.001000)
  86: rsq r0.w, r0.w
  87: mul r0.xyz, r0.wwww, r0.xyzx
  88: dp3 r0.w, r6.xyzx, r3.xyzx
  89: dp3_sat r2.w, r6.xyzx, r1.xyzx
  90: dp3_sat r3.x, r6.xyzx, r0.xyzx
  91: dp3_sat r0.x, r1.xyzx, r0.xyzx
  92: mul r0.y, r0.x, r0.x
  93: dp2 r0.y, r0.yyyy, r1.wwww
  94: add r0.y, r0.y, l(-0.500000)
  95: add r0.z, -r2.w, l(1.000000)
  96: mul r1.x, r0.z, r0.z
  97: mul r1.x, r1.x, r1.x
  98: mul r0.z, r0.z, r1.x
  99: mad r0.z, r0.y, r0.z, l(1.000000)
 100: add r1.x, -|r0.w|, l(1.000000)
 101: mul r1.y, r1.x, r1.x
 102: mul r1.y, r1.y, r1.y
 103: mul r1.x, r1.x, r1.y
 104: mad r0.y, r0.y, r1.x, l(1.000000)
 105: mul r0.y, r0.y, r0.z
 106: mul r0.z, r1.w, r1.w
 107: max r0.z, r0.z, l(0.002000)
 108: add r1.x, -r0.z, l(1.000000)
 109: mad r1.y, |r0.w|, r1.x, r0.z
 110: mad r1.x, r2.w, r1.x, r0.z
 111: mul r0.w, |r0.w|, r1.x
 112: mad r0.w, r2.w, r1.y, r0.w
 113: add r0.w, r0.w, l(0.000010)
 114: div r0.w, l(0.500000), r0.w
 115: mul r0.z, r0.z, r0.z
 116: mad r1.x, r3.x, r0.z, -r3.x
 117: mad r1.x, r1.x, r3.x, l(1.000000)
 118: mul r0.z, r0.z, l(0.318310)
 119: mad r1.x, r1.x, r1.x, l(0.000000)
 120: div r0.z, r0.z, r1.x
 121: mul r0.z, r0.z, r0.w
 122: mul r0.z, r0.z, l(3.141593)
 123: max r0.z, r0.z, l(0.000100)
 124: sqrt r0.z, r0.z
 125: mul r0.yz, r2.wwww, r0.yyzy
 126: dp3 r0.w, r4.xyzx, r4.xyzx
 127: ne r0.w, r0.w, l(0.000000)
 128: and r0.w, r0.w, l(0x3f800000)
 129: mul r0.z, r0.w, r0.z
 130: mul r1.xyz, r0.yyyy, r2.xyzx
 131: mul r0.yzw, r2.xxyz, r0.zzzz
 132: add r0.x, -r0.x, l(1.000000)
 133: mul r1.w, r0.x, r0.x
 134: mul r1.w, r1.w, r1.w
 135: mul r0.x, r0.x, r1.w
 136: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 138: mul r0.xyz, r0.yzwy, r2.xyzx
 139: mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 140: mov o0.w, l(1.000000)
 141: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 20 avg math (16..23)
 // Stats for Fragment shader:
 //        d3d11: 25 avg math (6..36), 3 avg texture (1..4), 1 avg branch (0..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 6 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mad r0.x, -cb0[4].y, l(0.779084), l(0.779084)
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: mul r0.yzw, r1.xxyz, cb0[5].xxyz
   3: mad r1.xyz, r1.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[4].yyyy, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mul o0.xyz, r0.xxxx, r0.yzwy
   6: mov o0.w, l(1.000000)
   7: mov o1.w, cb0[4].x
   8: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mov o2.w, l(1.000000)
  10: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  11: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: LIGHTPROBE_SH 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.w, r0.y, r0.y
  19: mad r0.w, r0.x, r0.x, -r0.w
  20: mul r1.xyzw, r0.yzzx, r0.xyzz
  21: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  22: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  23: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  24: mad o5.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  25: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[5].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
   7:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
   8:   add r2.xyz, r2.xyzx, cb2[4].xyzx
   9:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  10:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  11:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  12:   mul r0.w, r2.y, l(0.250000)
  13:   mul r1.w, cb2[0].z, l(0.500000)
  14:   mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
  15:   max r0.w, r0.w, r1.w
  16:   min r2.x, r2.y, r0.w
  17:   sample r3.xyzw, r2.xzwx, t1.xyzw, s0
  18:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  19:   sample r4.xyzw, r4.xyzx, t1.xyzw, s0
  20:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  21:   sample r2.xyzw, r2.xyzx, t1.xyzw, s0
  22:   mov r5.xyz, v2.xyzx
  23:   mov r5.w, l(1.000000)
  24:   dp4 r3.x, r3.xyzw, r5.xyzw
  25:   dp4 r3.y, r4.xyzw, r5.xyzw
  26:   dp4 r3.z, r2.xyzw, r5.xyzw
  27: else 
  28:   mov r2.xyz, v2.xyzx
  29:   mov r2.w, l(1.000000)
  30:   dp4 r3.x, cb1[39].xyzw, r2.xyzw
  31:   dp4 r3.y, cb1[40].xyzw, r2.xyzw
  32:   dp4 r3.z, cb1[41].xyzw, r2.xyzw
  33: endif 
  34: add r2.xyz, r3.xyzx, v5.xyzx
  35: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: log r2.xyz, r2.xyzx
  37: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  38: exp r2.xyz, r2.xyzx
  39: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  40: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mad r0.x, -cb0[4].y, l(0.779084), l(0.779084)
  44: mul r0.xyz, r0.xxxx, r1.xyzx
  45: mul r1.xyz, r2.xyzx, r0.xyzx
  46: exp o3.xyz, -r1.xyzx
  47: mov o0.xyz, r0.xyzx
  48: mov o0.w, l(1.000000)
  49: mov o1.w, cb0[4].x
  50: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  51: mov o2.w, l(1.000000)
  52: mov o3.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: LIGHTPROBE_SH UNITY_HDR_ON 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o3.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  10: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.w, r0.y, r0.y
  19: mad r0.w, r0.x, r0.x, -r0.w
  20: mul r1.xyzw, r0.yzzx, r0.xyzz
  21: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  22: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  23: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  24: mad o5.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  25: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[5].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
   7:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
   8:   add r2.xyz, r2.xyzx, cb2[4].xyzx
   9:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  10:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  11:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  12:   mul r0.w, r2.y, l(0.250000)
  13:   mul r1.w, cb2[0].z, l(0.500000)
  14:   mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
  15:   max r0.w, r0.w, r1.w
  16:   min r2.x, r2.y, r0.w
  17:   sample r3.xyzw, r2.xzwx, t1.xyzw, s0
  18:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  19:   sample r4.xyzw, r4.xyzx, t1.xyzw, s0
  20:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  21:   sample r2.xyzw, r2.xyzx, t1.xyzw, s0
  22:   mov r5.xyz, v2.xyzx
  23:   mov r5.w, l(1.000000)
  24:   dp4 r3.x, r3.xyzw, r5.xyzw
  25:   dp4 r3.y, r4.xyzw, r5.xyzw
  26:   dp4 r3.z, r2.xyzw, r5.xyzw
  27: else 
  28:   mov r2.xyz, v2.xyzx
  29:   mov r2.w, l(1.000000)
  30:   dp4 r3.x, cb1[39].xyzw, r2.xyzw
  31:   dp4 r3.y, cb1[40].xyzw, r2.xyzw
  32:   dp4 r3.z, cb1[41].xyzw, r2.xyzw
  33: endif 
  34: add r2.xyz, r3.xyzx, v5.xyzx
  35: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: log r2.xyz, r2.xyzx
  37: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  38: exp r2.xyz, r2.xyzx
  39: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  40: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mad r0.x, -cb0[4].y, l(0.779084), l(0.779084)
  44: mul r0.xyz, r0.xxxx, r1.xyzx
  45: mul o3.xyz, r2.xyzx, r0.xyzx
  46: mov o0.xyz, r0.xyzx
  47: mov o0.w, l(1.000000)
  48: mov o1.w, cb0[4].x
  49: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  50: mov o2.w, l(1.000000)
  51: mov o3.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


 }
}
Fallback "Diffuse"
}